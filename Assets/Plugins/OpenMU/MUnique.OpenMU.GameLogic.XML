<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MUnique.OpenMU.GameLogic</name>
    </assembly>
    <members>
        <member name="T:MUnique.OpenMU.GameLogic.ArrayExtensions">
            <summary>
            Extensions for arrays.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ArrayExtensions.ClearToDefaults``1(``0[])">
            <summary>
            Clears the elements of an array to the default values of the element type.
            </summary>
            <typeparam name="T">The array element type.</typeparam>
            <param name="array">The array.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ArrayExtensions.ClearToDefaults``1(``0[0:,0:])">
            <summary>
            Clears the elements of an array to the default values of the element type.
            </summary>
            <typeparam name="T">The array element type.</typeparam>
            <param name="array">The array.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.AttackableExtensions">
            <summary>
            Extensions for <see cref="T:MUnique.OpenMU.GameLogic.IAttackable"/>s. Contains the damage calculation.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.AttackableExtensions.CalculateDamage(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Entities.SkillEntry)">
            <summary>
            Calculates the damage, using a skill.
            </summary>
            <param name="attacker">The object which is attacking.</param>
            <param name="defender">The object which is defending.</param>
            <param name="skill">The skill which is used.</param>
            <returns>The hit information.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.AttackableExtensions.GetHitInfo(MUnique.OpenMU.GameLogic.IAttackable,System.UInt32,MUnique.OpenMU.GameLogic.DamageAttributes,MUnique.OpenMU.GameLogic.IAttackable)">
            <summary>
            Gets the hit information, calculates which part of the damage damages the shield and which the health.
            </summary>
            <param name="defender">The defender.</param>
            <param name="damage">The damage.</param>
            <param name="attributes">The attributes.</param>
            <param name="attacker">The attacker.</param>
            <returns>The calculated hit info.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.AttackableExtensions.GetBaseDmg(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Entities.SkillEntry,System.Int32@,System.Int32@)">
            <summary>
            Returns the base damage if the attacker, using a specific skill.
            </summary>
            <param name="attacker">The attacker.</param>
            <param name="skill">Skill which is used.</param>
            <param name="basemin">Minimum base damage.</param>
            <param name="basemax">Maximum base damage.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Attributes.ItemAwareAttributeSystem">
            <summary>
            An attribute system which considers items of a character.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.ItemAwareAttributeSystem.#ctor(MUnique.OpenMU.DataModel.Entities.Character)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Attributes.ItemAwareAttributeSystem"/> class.
            </summary>
            <param name="character">The character.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.ItemAwareAttributeSystem.ItemPowerUps">
            <summary>
            Gets the item power ups.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.ItemAwareAttributeSystem.ItemSetPowerUps">
            <summary>
            Gets or sets the item set power ups.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder">
            <summary>
            The attribute system for monsters, which is considering monster definitions.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.attributes">
            <summary>
            Attribute dictionary of a monster instance.
            Most monster instances don't have additional attributes, so we just instanciate one if needed.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.#ctor(MUnique.OpenMU.GameLogic.NPC.Monster)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder"/> class.
            </summary>
            <param name="monster">The monster.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.Item(MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.GetValueOfAttribute(MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.AddElement(MUnique.OpenMU.AttributeSystem.IElement,MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.RemoveElement(MUnique.OpenMU.AttributeSystem.IElement,MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.AddAttributeRelationship(MUnique.OpenMU.AttributeSystem.AttributeRelationship,MUnique.OpenMU.AttributeSystem.IAttributeSystem)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.MonsterAttributeHolder.GetOrCreateAttribute(MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <inheritdoc />
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper">
            <summary>
            A wrapper class which adapts power ups to <see cref="T:MUnique.OpenMU.AttributeSystem.IElement"/> instances.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper.#ctor(MUnique.OpenMU.AttributeSystem.IElement,MUnique.OpenMU.AttributeSystem.AttributeDefinition,MUnique.OpenMU.AttributeSystem.AttributeSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="targetAttribute">The target attribute.</param>
            <param name="attributeHolder">The attribute holder.</param>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper.ValueChanged">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper.Value">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper.AggregateType">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper.CreateByPowerUpDefintion(MUnique.OpenMU.DataModel.Attributes.PowerUpDefinition,MUnique.OpenMU.AttributeSystem.AttributeSystem)">
            <summary>
            Creates elements by a power up defintion.
            </summary>
            <param name="powerUpDef">The power up definition.</param>
            <param name="attributeHolder">The attribute holder.</param>
            <returns>The elements which represent the powerup.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.PowerUpWrapper.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Attributes.Stats">
            <summary>
            A collection of standard attributes.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.BaseStrength">
            <summary>
            Gets the base strength attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.TotalStrength">
            <summary>
            Gets the total strength attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.BaseAgility">
            <summary>
            Gets the base agility attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.TotalAgility">
            <summary>
            Gets the total agility attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.BaseVitality">
            <summary>
            Gets the base vitality attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.TotalVitality">
            <summary>
            Gets the total vitality attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.BaseEnergy">
            <summary>
            Gets the base energy attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.TotalEnergy">
            <summary>
            Gets the total energy attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.BaseLeadership">
            <summary>
            Gets the base leadership attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.TotalLeadership">
            <summary>
            Gets the total leadership attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Level">
            <summary>
            Gets the level attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ExperienceRate">
            <summary>
            Gets the experience rate attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MasterLevel">
            <summary>
            Gets the master level definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MasterExperienceRate">
            <summary>
            Gets the master experience rate definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MoneyAmountRate">
            <summary>
            Gets the zen amount rate attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ItemDropRate">
            <summary>
            Gets the item drop rate attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.CurrentHealth">
            <summary>
            Gets the current health attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumHealth">
            <summary>
            Gets the maximum health attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.CurrentMana">
            <summary>
            Gets the current mana attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumMana">
            <summary>
            Gets the maximum mana attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.CurrentShield">
            <summary>
            Gets the current shield attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumShield">
            <summary>
            Gets the maximum shield attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumShieldTemp">
            <summary>
            Gets the maximum shield intermediate attribute definition, which should contain the Level ^ 2.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.CurrentAbility">
            <summary>
            Gets the current ability attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumAbility">
            <summary>
            Gets the maximum ability attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.AttackRatePvm">
            <summary>
            Gets the attack rate PVM attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.AttackRatePvp">
            <summary>
            Gets the attack rate PVP attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MinimumPhysBaseDmgByWeapon">
            <summary>
            Gets the minimum physical base DMG by weapon attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumPhysBaseDmgByWeapon">
            <summary>
            Gets the maximum physical base DMG by weapon attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MinimumPhysBaseDmg">
            <summary>
            Gets the minimum physical base DMG attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumPhysBaseDmg">
            <summary>
            Gets the maximum physical base DMG attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MinimumWizBaseDmg">
            <summary>
            Gets the minimum wiz base DMG attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumWizBaseDmg">
            <summary>
            Gets the maximum wiz base DMG attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MinimumCurseBaseDmg">
            <summary>
            Gets the minimum curse base DMG attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumCurseBaseDmg">
            <summary>
            Gets the maximum curse base DMG attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.SkillMultiplier">
            <summary>
            Gets the skill multiplier attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.AttackSpeed">
            <summary>
            Gets the attack speed attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.AttackDamageIncrease">
            <summary>
            Gets the attack damage increase attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ComboBonus">
            <summary>
            Gets the combo bonus attribute definition.
            TODO
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.FinalDamageIncreasePvp">
            <summary>
            Gets the final damage increase PVP attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DefenseBase">
            <summary>
            Gets the defense base attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DefensePvm">
            <summary>
            Gets the defense PVM attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DefensePvp">
            <summary>
            Gets the defense PVP attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DefenseRatePvm">
            <summary>
            Gets the defense rate PVM attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DefenseRatePvp">
            <summary>
            Gets the defense rate PVP attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DamageReceiveDecrement">
            <summary>
            Gets the damage receive decrement attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ShieldBlockDamageDecrement">
            <summary>
            Gets the shield block damage decrement attribute definition.
            TODO: Usage in a shield skill handler
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.IceResistance">
            <summary>
            Gets the ice resistance attribute definition.
            TODO Consider resistancies of monsters, players and the attacking skills
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.FireResistance">
            <summary>
            Gets the fire resistance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.WaterResistance">
            <summary>
            Gets the water resistance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.EarthResistance">
            <summary>
            Gets the earth resistance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.WindResistance">
            <summary>
            Gets the wind resistance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.PoisonResistance">
            <summary>
            Gets the poison resistance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.LightningResistance">
            <summary>
            Gets the lightning resistance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DamageReflection">
            <summary>
            Gets the damage reflection attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ManaRecovery">
            <summary>
            Gets the mana recovery attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.HealthRecovery">
            <summary>
            Gets the health recovery attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.AbilityRecovery">
            <summary>
            Gets the ability recovery attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ShieldRecovery">
            <summary>
            Gets the shield recovery attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.CriticalDamageChance">
            <summary>
            Gets the critical damage chance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ExcellentDamageChance">
            <summary>
            Gets the excellent damage chance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DefenseIgnoreChance">
            <summary>
            Gets the defense ignore chance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ShieldBypassChance">
            <summary>
            Gets the shield bypass chance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.DoubleDamageChance">
            <summary>
            Gets the double damage chance attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ManaAfterMonsterKill">
            <summary>
            Gets the mana after monster kill attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.HealthAfterMonsterKill">
            <summary>
            Gets the health after monster kill attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ShieldAfterMonsterKill">
            <summary>
            Gets the shield after monster kill attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.AbilityAfterMonsterKill">
            <summary>
            Gets the ability after monster kill attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ShieldDecreaseRateIncrease">
            <summary>
            Gets the shield decrease rate increase attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ShieldRateIncrease">
            <summary>
            Gets the shield rate increase attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.ItemDurationIncrease">
            <summary>
            Gets the item duration increase attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.PetDurationIncrease">
            <summary>
            Gets the pet duration increase attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.MaximumGuildSize">
            <summary>
            Gets the maximum guild size attribute definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.FullyRecoverManaAfterHitChance">
            <summary>
            Gets the fully recover mana after hit chance definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.FullyRecoverHealthAfterHitChance">
            <summary>
            Gets the fully recover health after hit chance definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.HealthLossAfterHit">
            <summary>
            Gets the health loss after hit definition.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.IntervalRegenerationAttributes">
            <summary>
            Gets the attributes which are regenerated in an interval.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.AfterMonsterKillRegenerationAttributes">
            <summary>
            Gets the attributes which regenerate after a monster has been killed by the player.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration">
            <summary>
            A regeneration definition.
            At regeneration the value of <see cref="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.RegenerationMultiplier"/> * <see cref="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.MaximumAttribute"/> is getting added to
            <see cref="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.CurrentAttribute"/>, until the value of <see cref="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.MaximumAttribute"/> is reached.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.#ctor(MUnique.OpenMU.AttributeSystem.AttributeDefinition,MUnique.OpenMU.AttributeSystem.AttributeDefinition,MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration"/> class.
            At regeneration the value of <paramref name="regenerationMultiplier"/> * <paramref name="maximumAttribute"/> is getting added to
            <paramref name="currentAttribute"/>, until the value of <paramref name="maximumAttribute"/> is reached.
            </summary>
            <param name="regenerationMultiplier">The regeneration multiplier.</param>
            <param name="maximumAttribute">The maximum attribute.</param>
            <param name="currentAttribute">The current attribute.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.RegenerationMultiplier">
            <summary>
            Gets or sets the regeneration multiplier.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.MaximumAttribute">
            <summary>
            Gets or sets the maximum attribute.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Attributes.Stats.Regeneration.CurrentAttribute">
            <summary>
            Gets or sets the current attribute.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.BackupItemStorage">
            <summary>
            A storage which keeps items backed up - to be able to revert them after cancellation of an action.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BackupItemStorage.#ctor(MUnique.OpenMU.DataModel.Entities.ItemStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.BackupItemStorage"/> class.
            </summary>
            <param name="itemStorage">The item storage.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.BackupItemStorage.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.BackupItemStorage.Money">
            <summary>
            Gets or sets the money.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BackupItemStorage.RestoreItemStates">
            <summary>
            Restores the initial item states.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.MapInitializer">
            <summary>
            A basic map initializer.
            </summary>
            <seealso cref="T:MUnique.OpenMU.GameLogic.IMapInitializer" />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MapInitializer.#ctor(MUnique.OpenMU.DataModel.Configuration.GameConfiguration,MUnique.OpenMU.Interfaces.IMapStateObserver)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.MapInitializer"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="mapStateObserver">The map state observer.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MapInitializer.ItemDropDuration">
            <summary>
            Gets or sets the duration of the item drop on created <see cref="T:MUnique.OpenMU.GameLogic.GameMap"/>s.
            </summary>
            <value>
            The duration of the item drop on created <see cref="T:MUnique.OpenMU.GameLogic.GameMap"/>s.
            </value>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MapInitializer.ChunkSize">
            <summary>
            Gets or sets the size of the chunk of created <see cref="T:MUnique.OpenMU.GameLogic.GameMap"/>s.
            </summary>
            <value>
            The size of the chunk of created <see cref="T:MUnique.OpenMU.GameLogic.GameMap"/>s.
            </value>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MapInitializer.CreateGameMap(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MapInitializer.InitializeState(MUnique.OpenMU.GameLogic.GameMap)">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MapInitializer.GetMapDefinition(System.UInt16)">
            <summary>
            Gets the map definition by searching for it at the <see cref="T:MUnique.OpenMU.DataModel.Configuration.GameConfiguration"/>.
            </summary>
            <param name="mapNumber">The map number.</param>
            <returns>The game map definition.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MapInitializer.InternalCreateGameMap(MUnique.OpenMU.DataModel.Configuration.GameMapDefinition)">
            <summary>
            Creates the game map instance with the specified definition.
            </summary>
            <param name="definition">The definition.</param>
            <returns>The created game map instance.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager">
            <summary>
            A area of interest manager which works with a bucket map.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager" /> class.
            </summary>
            <param name="chunkSize">Size of the chunk.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager.Map">
            <summary>
            Gets the underlying bucket map.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager.AddObject(MUnique.OpenMU.GameLogic.ILocateable)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager.RemoveObject(MUnique.OpenMU.GameLogic.ILocateable)">
            <inheritdoc/>
            <remarks>
            This needs to take into account, that the <see cref="T:MUnique.OpenMU.GameLogic.Walker"/> might change the <see cref="P:MUnique.OpenMU.GameLogic.ILocateable.X"/> and <see cref="P:MUnique.OpenMU.GameLogic.ILocateable.Y"/>,
            but not updating the buckets. So accessing the bucket of the current coordinates might not be the current bucket!
            </remarks>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager.MoveObject(MUnique.OpenMU.GameLogic.ILocateable,System.Byte,System.Byte,System.Object,MUnique.OpenMU.GameLogic.Views.MoveType)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager.GetInRange(System.Int32,System.Int32,System.Int32,MUnique.OpenMU.GameLogic.RangeType)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketAreaOfInterestManager.UpdateObservingBuckets(System.Int32,System.Int32,MUnique.OpenMU.GameLogic.IBucketMapObserver)">
            <summary>
            Updates the observing buckets, and notifies the <paramref name="player"/> about new objects which are in scope, and old objects which are out of scope.
            </summary>
            <param name="newx">The new x coordinate on the map.</param>
            <param name="newy">The new y coordinate on the map.</param>
            <param name="player">The player.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.BucketItemEventArgs`1">
            <summary>
            Event args which includes the involved bucket item.
            </summary>
            <typeparam name="T">The type of the bucket item.</typeparam>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketItemEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.BucketItemEventArgs`1"/> class.
            </summary>
            <param name="item">The bucket item.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.BucketItemEventArgs`1.Item">
            <summary>
            Gets the bucket item which is involved in the event.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.RangeType">
            <summary>
            The type of the range calculation type.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.RangeType.Quadratic">
            <summary>
            An object is in range, when its in the quadrat of (x-range, y-range) and (x+range, y+range).
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.RangeType.Exact">
            <summary>
            An object is in range, when it is exactly in range (a²+b²=c²).
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.BucketMap`1">
            <summary>
            A two-dimensional map of buckets.
            </summary>
            <typeparam name="T">The type of objects which should be hold.</typeparam>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketMap`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.BucketMap`1"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketMap`1.#ctor(System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.BucketMap`1"/> class.
            </summary>
            <param name="sideLength">Length of the side.</param>
            <param name="createLists">if set to <c>true</c> the all lists are created now, and not by demand.</param>
            <param name="listCapacity">The list capacity.</param>
            <param name="bucketSideLength">Length of the bucket side.</param>
            <exception cref="T:System.ArgumentException">SideLength must be a multiple of BucketSideLength.</exception>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.BucketMap`1.SideLength">
            <summary>
            Gets or sets the length of a side of the map. This value should be a multiple of <see cref="P:MUnique.OpenMU.GameLogic.BucketMap`1.BucketSideLength"/>.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.BucketMap`1.BucketSideLength">
            <summary>
            Gets or sets the length of the bucket side.
            </summary>
            <value>
            The length of the bucket side.
            </value>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.BucketMap`1.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the <see cref="T:MUnique.OpenMU.GameLogic.Bucket`1"/> at the specified coordinates.
            </summary>
            <value>
            The <see cref="T:MUnique.OpenMU.GameLogic.Bucket`1"/>.
            </value>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>The <see cref="T:MUnique.OpenMU.GameLogic.Bucket`1"/> at the specified coordinates.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketMap`1.Move(`0,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Moves the specified element.
            </summary>
            <param name="element">The element.</param>
            <param name="xOld">The old x coordinate.</param>
            <param name="yOld">The old y coordinate.</param>
            <param name="xNew">The new x coordinate.</param>
            <param name="yNew">The new y coordinate.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketMap`1.GetInRange(System.Int32,System.Int32,System.Int32,MUnique.OpenMU.GameLogic.RangeType)">
            <summary>
            Gets the items which are in range of the specified coordinate and range.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="range">The maximum range.</param>
            <param name="rangeType">Type of the range.</param>
            <returns>The items which are in range of the specified coordinate and range.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketMap`1.GetBucketsInRange(System.Int32,System.Int32,System.Int32,MUnique.OpenMU.GameLogic.RangeType)">
            <summary>
            Gets the buckets in the specified range of the specified coordinate.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="range">The range.</param>
            <param name="rangeType">Type of the range.</param>
            <returns>The buckets in the specified range of the specified coordinate.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.BucketMap`1.IsInRangeExact(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Determines whether the points x1/y1 and x2/y2 are in range.
            </summary>
            <param name="x1">The x coordinate of the first position.</param>
            <param name="y1">The y coordinate of the first position.</param>
            <param name="x2">The x coordinate of the second position.</param>
            <param name="y2">The y coordinate of the second position.</param>
            <param name="maxrange">The maximum range.</param>
            <returns>True, if the points are in range.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Bucket`1">
            <summary>
            A bucket, which can be observed for added and removed items.
            </summary>
            <typeparam name="T">The type which should be hold by this bucket.</typeparam>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Bucket`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Bucket`1"/> class.
            </summary>
            <param name="capacity">The initial capacity.</param>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.Bucket`1.ItemAdded">
            <summary>
            Occurs when an item has been added.
            </summary>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.Bucket`1.ItemRemoved">
            <summary>
            Occurs when an item has been removed.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Bucket`1.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Bucket`1.Add(`0)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Bucket`1.Remove(`0)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>The success.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Bucket`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Bucket`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Bucket`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.DirectionExtensions">
            <summary>
            Extension methods which have to do with handling <see cref="T:MUnique.OpenMU.DataModel.Configuration.Direction"/>s.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DirectionExtensions.CalculateTargetPoint(MUnique.OpenMU.Pathfinding.Point,MUnique.OpenMU.DataModel.Configuration.Direction)">
            <summary>
            Calculates the target point based on the origin and the specified direction.
            </summary>
            <param name="origin">From point.</param>
            <param name="direction">The direction.</param>
            <returns>The target point based on the origin and the specified direction.</returns>
            <exception cref="T:System.ArgumentException">direction</exception>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DirectionExtensions.Negate(MUnique.OpenMU.DataModel.Configuration.Direction)">
            <summary>
            Negates the specified direction.
            </summary>
            <param name="direction">The direction.</param>
            <returns>The negative direction of the specified diection.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DirectionExtensions.RotateRight(MUnique.OpenMU.DataModel.Configuration.Direction)">
            <summary>
            Rotates the direction by 90 degree to the right.
            </summary>
            <param name="direction">The direction which should get rotated to the right.</param>
            <returns>The rotated direction.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DirectionExtensions.RotateLeft(MUnique.OpenMU.DataModel.Configuration.Direction)">
            <summary>
            Rotates the direction by 90 degree to the left.
            </summary>
            <param name="direction">The direction which should get rotated to the left.</param>
            <returns>The rotated direction.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DirectionExtensions.GetDirectionTo(MUnique.OpenMU.Pathfinding.Point,MUnique.OpenMU.Pathfinding.Point)">
            <summary>
            Gets the direction from one point to another.
            </summary>
            <param name="from">The origin point.</param>
            <param name="to">The target point.</param>
            <returns>The direction from the origin to the target.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.DroppedItem">
            <summary>
            An item which got dropped on the ground of a map.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DroppedItem.pickupLock">
            <summary>
            Gets the pickup lock. Used to synchronize pick up requests from the players.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DroppedItem.#ctor(MUnique.OpenMU.DataModel.Entities.Item,System.Byte,System.Byte,MUnique.OpenMU.GameLogic.GameMap,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.DroppedItem" /> class.
            </summary>
            <param name="item">The item.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="map">The map.</param>
            <param name="dropper">The dropper.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DroppedItem.Item">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DroppedItem.X">
            <summary>
            Gets or sets the x coordinate on the map.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DroppedItem.Y">
            <summary>
            Gets or sets the y coordinate on the map.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DroppedItem.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DroppedItem.CurrentMap">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DroppedItem.TryPickUpBy(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Tries to pick the item up by the specified player.
            </summary>
            <param name="player">The player.</param>
            <returns>The success.</returns>
            <remarks>Can be overwritten, for example for quest items which dropped only for a specific player.</remarks>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DroppedItem.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.EnumerableExtensions">
            <summary>
            Extensions for enumerables.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Executes the <paramref name="action"/> for each element of <paramref name="enumerable"/>.
            </summary>
            <typeparam name="T">The generic type of the enumerable.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="action">The action which should be executed for each element.</param>
            <exception cref="T:System.ArgumentNullException">action</exception>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.EnumerableExtensions.SelectRandom``1(System.Collections.Generic.IEnumerable{``0},MUnique.OpenMU.GameLogic.IRandomizer)">
            <summary>
            Selects a random element of an enumerable.
            </summary>
            <typeparam name="T">The generic type of the enumerable.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="randomizer">The randomizer.</param>
            <returns>The randomly selected element.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.EnumerableExtensions.SelectRandom``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Selects a random element of an enumerable.
            </summary>
            <typeparam name="T">The generic type of the enumerable.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns>The randomly selected element.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.GameMapTerrain">
            <summary>
            The terrain of a map.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMapTerrain.#ctor(MUnique.OpenMU.DataModel.Configuration.GameMapDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.GameMapTerrain"/> class.
            </summary>
            <param name="definition">The game map definition.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMapTerrain.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.GameMapTerrain"/> class.
            </summary>
            <param name="mapName">Name of the map.</param>
            <param name="terrainData">The terrain data.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameMapTerrain.SafezoneMap">
            <summary>
            Gets a grid of all safezone coordinates.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameMapTerrain.WalkMap">
            <summary>
            Gets a grid of all walkable coordinates.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameMapTerrain.AIgrid">
            <summary>
            Gets a grid of the walkable coordinates of monsters.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMapTerrain.GetRandomDropCoordinate(System.Byte,System.Byte,System.Byte)">
            <summary>
            Gets a random drop coordinate at the specified point in the specified radius.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="maxmimumRadius">The maximum radius around the specifeied coordinate.</param>
            <returns>The random drop coordinate.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMapTerrain.ReadTerrainData(System.IO.Stream)">
            <summary>
            Reads the terrain data from a stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.DamageAttributes">
            <summary>
            The attributes of a damage.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.Undefined">
            <summary>
            No defined attribute.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.Critical">
            <summary>
            The damage is critical (means 100% of the possible damage between minimum and maximum).
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.Excellent">
            <summary>
            The damage is excellent (20% higher base damage than critical).
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.IgnoreDefense">
            <summary>
            The damage ignored the defense of the victim.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.Poison">
            <summary>
            The damage is caused by poison.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.Double">
            <summary>
            The damage was doubled.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.Triple">
            <summary>
            The damage was tripled (e.g. combo skill).
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DamageAttributes.Reflected">
            <summary>
            The damage was reflected.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.HitInfo">
            <summary>
            The information about a hit.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.HitInfo.#ctor(System.UInt32,System.UInt32,MUnique.OpenMU.GameLogic.DamageAttributes)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.HitInfo"/> struct.
            </summary>
            <param name="healthDamage">The damage which reduces the health points.</param>
            <param name="shieldDamage"> The damage which reduces the shield points.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.HitInfo.Attributes">
            <summary>
            Gets the attributes of the damage.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.HitInfo.HealthDamage">
            <summary>
            Gets or sets the damage which reduces the health points.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.HitInfo.ShieldDamage">
            <summary>
            Gets or sets the damage which reduces the shield points.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IAreaOfInterestManager">
            <summary>
            A manager of an area of interest.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IAreaOfInterestManager.AddObject(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Adds the object to the area of interest.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IAreaOfInterestManager.RemoveObject(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Removes the object from the area of interest.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IAreaOfInterestManager.MoveObject(MUnique.OpenMU.GameLogic.ILocateable,System.Byte,System.Byte,System.Object,MUnique.OpenMU.GameLogic.Views.MoveType)">
            <summary>
            Moves the object.
            </summary>
            <param name="obj">The object.</param>
            <param name="newX">The new x.</param>
            <param name="newY">The new y.</param>
            <param name="moveLock">The move lock.</param>
            <param name="moveType">Type of the move.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IAreaOfInterestManager.GetInRange(System.Int32,System.Int32,System.Int32,MUnique.OpenMU.GameLogic.RangeType)">
            <summary>
            Gets the object in range.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="range">The range.</param>
            <param name="rangeType">Type of the range.</param>
            <returns>The objects in range.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IAttackable">
            <summary>
            Interface for an attackable object. An attackable object can also attack other attackable objects.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IAttackable.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IAttackable.Alive">
            <summary>
            Gets a value indicating whether this <see cref="T:MUnique.OpenMU.GameLogic.IAttackable"/> is alive.
            </summary>
            <value>
              <c>true</c> if alive; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IAttackable.AttackBy(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Entities.SkillEntry)">
            <summary>
            Attacks this object by the attacker with the specified skill.
            </summary>
            <param name="attacker">The attacker.</param>
            <param name="skill">The skill.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IAttackable.ReflectDamage(MUnique.OpenMU.GameLogic.IAttackable,System.UInt32)">
            <summary>
            Reflects the damage which was done previously with <see cref="M:MUnique.OpenMU.GameLogic.IAttackable.AttackBy(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Entities.SkillEntry)" /> or even <see cref="M:MUnique.OpenMU.GameLogic.IAttackable.ReflectDamage(MUnique.OpenMU.GameLogic.IAttackable,System.UInt32)" /> to the <paramref name="reflector" />.
            </summary>
            <param name="reflector">The reflector.</param>
            <param name="damage">The damage.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IBucketMapObserver">
            <summary>
            Interface of an object which is observing other objects on its current map.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IBucketMapObserver.InfoRange">
            <summary>
            Gets the maxmimum distance of which buckets in range the observer is interested in.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IBucketMapObserver.ObservingBuckets">
            <summary>
            Gets the observing buckets.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IBucketMapObserver.LocateableAdded(System.Object,MUnique.OpenMU.GameLogic.BucketItemEventArgs{MUnique.OpenMU.GameLogic.ILocateable})">
            <summary>
            This method is called, when another locateable is moving into the observing zones.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event args with the item which got added.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IBucketMapObserver.LocateableRemoved(System.Object,MUnique.OpenMU.GameLogic.BucketItemEventArgs{MUnique.OpenMU.GameLogic.ILocateable})">
            <summary>
            This method is called, when another locateable is moving out of the observing zones.
            </summary>
            <param name="sender">The sender.</param>
            <param name="eventArgs">The event args with the item which got removed.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IBucketMapObserver.LocateablesOutOfScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.ILocateable})">
            <summary>
            This method is called, when this object is moving to another zone, and old objects are getting out of range.
            </summary>
            <param name="oldObjects">The objects which are out of range.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IBucketMapObserver.NewLocateablesInScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.ILocateable})">
            <summary>
            This method is called, when this object is moving to another zone, and new objects are getting into range.
            </summary>
            <param name="newObjects">The objects which are getting into range.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IDropGenerator">
            <summary>
            The interface for a drop generator.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IDropGenerator.GetItemDropsOrAddMoney(MUnique.OpenMU.DataModel.Configuration.MonsterDefinition,System.Int32,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Gets the item drops which are generated when a monster got killed by a player.
            If money is dropped, it is added to the players inventory automatically. If the
            player is in a party, the money is split between all players.
            </summary>
            <param name="monster">The monster which got killed.</param>
            <param name="gainedExperience">The experience which the player gained form the kill (relevant for the money drop).</param>
            <param name="player">The player who killed the monster.</param>
            <returns>The item drops which are generated when a monster got killed by a player.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.DefaultDropGenerator">
            <summary>
            The default drop generator.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.DefaultDropGenerator.BaseMoneyDrop">
            <summary>
            The amoun of money which is dropped at least, and added to the gained experience.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DefaultDropGenerator.#ctor(MUnique.OpenMU.DataModel.Configuration.GameConfiguration,MUnique.OpenMU.GameLogic.IRandomizer)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.DefaultDropGenerator" /> class.
            </summary>
            <param name="config">The configuration.</param>
            <param name="randomizer">The randomizer.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DefaultDropGenerator.GetItemDropsOrAddMoney(MUnique.OpenMU.DataModel.Configuration.MonsterDefinition,System.Int32,MUnique.OpenMU.GameLogic.Player)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DefaultDropGenerator.GetRandomItem(System.Int32,System.Boolean)">
            <summary>
            Gets a random item.
            </summary>
            <param name="monsterLvl">The monster level.</param>
            <param name="socketItems">if set to <c>true</c> [socket items].</param>
            <returns>A random item.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DefaultDropGenerator.ApplyRandomOptions(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Applies random options to the item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DefaultDropGenerator.GetRandomExcellentItem(System.Int32)">
            <summary>
            Gets a random excellent item.
            </summary>
            <param name="monsterLvl">The monster level.</param>
            <returns>A random excellent item.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DefaultDropGenerator.GetRandomAncient">
            <summary>
            Gets a random ancient item.
            </summary>
            <returns>A random ancient item.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IIdentifiable">
            <summary>
            Interface for a identifiable object.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IIdentifiable.Id">
            <summary>
            Gets the identifier.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ILocateable">
            <summary>
            Interface for an object which has a location on a map.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ILocateable.CurrentMap">
            <summary>
            Gets the current map on which the object currently is.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ILocateable.X">
            <summary>
            Gets or sets the x coordinate on the map.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ILocateable.Y">
            <summary>
            Gets or sets the y coordinate on the map.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IHasBucketInformation">
            <summary>
            Interface for objects which have bucket information.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IHasBucketInformation.NewBucket">
            <summary>
            Gets or sets the current bucket where this instance currently moves at.
            This is helpful for other objects to determine if the observation should
            be continued or not.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IHasBucketInformation.OldBucket">
            <summary>
            Gets or sets the bucket where this instance currently moves away.
            This is helpful for other objects to determine if the observation should
            be continued or not.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IMapInitializer">
            <summary>
            An interface for a map initializer which is responsible to create new instances of <see cref="T:MUnique.OpenMU.GameLogic.GameMap"/>s
            and it's initialization.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IMapInitializer.CreateGameMap(System.UInt16)">
            <summary>
            Creates a new game map instance of the specified game map number.
            </summary>
            <param name="mapNumber">The map number.</param>
            <returns>The new game map instance.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IMapInitializer.InitializeState(MUnique.OpenMU.GameLogic.GameMap)">
            <summary>
            Initializes the state of the previously created game map (e.g. by creating NPC instances).
            </summary>
            <param name="createdMap">The created map.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.InventoryConstants">
            <summary>
            The constants for the players inventory.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.FirstEquippableItemSlotIndex">
            <summary>
            The first equippable item slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.LastEquippableItemSlotIndex">
            <summary>
            The last equippable item slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.EquippableSlotsCount">
            <summary>
            The equippable slots count.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.LeftHandSlot">
            <summary>
            The left hand inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.RightHandSlot">
            <summary>
            The right hand inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.HelmSlot">
            <summary>
            The helm inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.ArmorSlot">
            <summary>
            The armor inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.PantsSlot">
            <summary>
            The pants inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.GlovesSlot">
            <summary>
            The gloves inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.BootsSlot">
            <summary>
            The boots inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.WingsSlot">
            <summary>
            The wings inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.PetSlot">
            <summary>
            The pet inventory slot index.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.RowSize">
            <summary>
            The size of a row.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.InventoryRows">
            <summary>
            Number of rows in the inventory.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.MaximumNumberOfExtensions">
            <summary>
            The maximum number of extensions.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.RowsOfOneExtension">
            <summary>
            The number of rows of one extension.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.AllInventoryExtensionRows">
            <summary>
            Number of rows of the inventory extension.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.FirstStoreItemSlotIndex">
            <summary>
            Index of the first personal store slot.
            12 = number of wearable item slots
            64 = number of inventory slots
            128 = number of extended inventory slots (64 are hidden in game, S6E3)
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.StoreRows">
            <summary>
            The number of personal store rows.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.StoreSize">
            <summary>
            The size of the personal store.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.TemporaryStorageRows">
            <summary>
            The number of temporary storage rows.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.TemporaryStorageSize">
            <summary>
            The number of temporary storage slots.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.WarehouseRows">
            <summary>
            The number of rows in the warehouse (vault).
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.InventoryConstants.WarehouseSize">
            <summary>
            The number of warehouse item slots.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.InventoryConstants.GetInventorySize(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Gets the size of the inventory of the specified player.
            </summary>
            <param name="player">The player.</param>
            <returns>The size of the inventory.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.InventoryStorage">
            <summary>
            The storage of an inventory of a player, which also contains equippable slots. This class also manages the powerups which get created by equipped items.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.InventoryStorage.#ctor(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.InventoryStorage" /> class.
            </summary>
            <param name="player">The player.</param>
            <param name="context">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.InventoryStorage.AddItem(System.Byte,MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc />
            <remarks>Additionally we need to make a temporary item persistent with the context of the player.</remarks>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IPartyMember">
            <summary>
            The interface for a party member.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IPartyMember.Party">
            <summary>
            Gets or sets the current party of the player.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IPartyMember.LastPartyRequester">
            <summary>
            Gets or sets the last party requester.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IPartyMember.PartyView">
            <summary>
            Gets the party view.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IPartyMember.MaximumHealth">
            <summary>
            Gets the maximum health.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IPartyMember.CurrentHealth">
            <summary>
            Gets the current health.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IPartyMember.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IRandomizer">
            <summary>
            Description of IRandomizer.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextRandomBool">
            <summary>
            Returns the next random boolean value.
            </summary>
            <returns>The next random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextRandomBool(System.Int32)">
            <summary>
            Returns the next random boolean value, with a chance of <paramref name="percent"/> of being true.
            </summary>
            <param name="percent">The percent of the chance of being true.</param>
            <returns>The next random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextRandomBool(System.Int32,System.Int32)">
            <summary>
            Returns the next random boolean value, with a <paramref name="chance"/> of <paramref name="basis"/> of being true.
            </summary>
            <param name="chance">The chance of <paramref name="basis"/> of being true.</param>
            <param name="basis">The basis.</param>
            <returns>The next random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextRandomBool(System.Double)">
            <summary>
            Returns the next random boolean value, with the <paramref name="chance"/> of being true.
            </summary>
            <param name="chance">The chance of being true.</param>
            <returns>The next random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextInt(System.Int32,System.Int32)">
            <summary>
            The next random integer.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The next random integer between <paramref name="min"/> and <paramref name="max"/>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextInt(System.UInt32,System.UInt32)">
            <summary>
            The next random integer.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The next random integer between <paramref name="min"/> and <paramref name="max"/>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextUInt(System.UInt32,System.UInt32)">
            <summary>
            The next random unsigned integer.
            </summary>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The next random integer between <paramref name="min"/> and <paramref name="max"/>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IRandomizer.NextDouble">
            <summary>
            The next random double between 0 and 1.
            </summary>
            <returns>The next random integer between 0 and 1.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IRotateable">
            <summary>
            Interface for a rotateable class. An instance implementing this interface can be rotated on its game map.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IRotateable.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ISkillList">
            <summary>
            Interface for a skill list of a character.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ISkillList.Skills">
            <summary>
            Gets the skills.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ISkillList.SkillCount">
            <summary>
            Gets the number of skills in the skill list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ISkillList.GetSkill(System.UInt16)">
            <summary>
            Gets the skill with the specified id.
            </summary>
            <param name="skillId">The skill identifier.</param>
            <returns>The skill with the specified id.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ISkillList.AddLearnedSkill(MUnique.OpenMU.DataModel.Configuration.Skill)">
            <summary>
            Adds the learned skill.
            </summary>
            <param name="skill">The skill.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ISkillList.RemoveItemSkill(System.UInt16)">
            <summary>
            Removes the item skill.
            </summary>
            <param name="skillId">The skill identifier.</param>
            <returns>The success of removing the skill.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ISkillList.ContainsSkill(System.UInt16)">
            <summary>
            Determines whether the list contains the specified skill of the specified id.
            </summary>
            <param name="skillId">The skill identifier.</param>
            <returns><c>True</c>, if the skill with the specified id is contained in this list; Otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ISupportWalk">
            <summary>
            Interface for objects which support walking.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ISupportWalk.IsWalking">
            <summary>
            Gets a value indicating whether this instance is walking.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ISupportWalk.StepDelay">
            <summary>
            Gets the delay between each step. Lower delay means faster walking.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ISupportWalk.NextDirections">
            <summary>
            Gets the next walking steps.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ISupportWalk.WalkTarget">
            <summary>
            Gets or sets the walk target coordinate.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.WalkingStep">
            <summary>
            A walking step information.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.WalkingStep.From">
            <summary>
            Gets or sets point from where the step originates.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.WalkingStep.To">
            <summary>
            Gets or sets the point where the step targets.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.WalkingStep.Direction">
            <summary>
            Gets or sets the direction (1 - 8).
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ItemEventArgs">
            <summary>
            Event args containing the involved instance of an <see cref="P:MUnique.OpenMU.GameLogic.ItemEventArgs.Item"/>.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemEventArgs.#ctor(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.ItemEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ItemEventArgs.Item">
            <summary>
            Gets the item which is involved at the event.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ItemExtensions">
            <summary>
            Extension methods for <see cref="T:MUnique.OpenMU.DataModel.Entities.Item"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemExtensions.GetMaximumDurabilityOfOnePiece(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Gets the maximum durability of the item.
            </summary>
            <param name="item">The item.</param>
            <returns>The maximum durability of the item.</returns>
            <remarks>
            I think this is more like the durability which can be dropped.
            Some items can be stacked up to 255 pieces, which increases the durability value.
            </remarks>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemExtensions.GetAppearance(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Gets the item data which is relvant for the visual appearance of an item.
            </summary>
            <param name="item">The item.</param>
            <returns>The item data which is relvant for the visual appearance of an item.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemExtensions.MakePersistent(MUnique.OpenMU.DataModel.Entities.ItemAppearance,MUnique.OpenMU.Persistence.IContext)">
            <summary>
            Creates a persistent instance of the given <see cref="T:MUnique.OpenMU.DataModel.Entities.ItemAppearance"/> and returns it.
            </summary>
            <param name="itemAppearance">The item appearance.</param>
            <param name="persistenceContext">The persistence context where the object should be added.</param>
            <returns>A persistent instance of the given <see cref="T:MUnique.OpenMU.DataModel.Entities.ItemAppearance"/>.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ItemStorageAdapter">
            <summary>
            A wrapper for another <see cref="T:MUnique.OpenMU.DataModel.Entities.ItemStorage"/>.
            Required to split one item storage into more than one storage spaces, e.g. Inventory and Personal Store which use the same ItemStorage.
            </summary>
            <seealso cref="T:MUnique.OpenMU.DataModel.Entities.ItemStorage" />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.#ctor(MUnique.OpenMU.DataModel.Entities.ItemStorage,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.ItemStorageAdapter"/> class.
            </summary>
            <param name="actualStorage">The actual storage.</param>
            <param name="firstItemSlot">The first item slot.</param>
            <param name="itemSlotCount">The item slot count.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ItemStorageAdapter.Items">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ItemStorageAdapter.ActualStorage">
            <summary>
            Gets the actual storage which is wrapped by this instance.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter">
            <summary>
            A collection adapter which just returns items between certain item slots.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.Count">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.Add(MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.Clear">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.Contains(MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.CopyTo(MUnique.OpenMU.DataModel.Entities.Item[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemStorageAdapter.CollectionAdapter.Remove(MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc />
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ITrader">
            <summary>
            Interface of a trader.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.Name">
            <summary>
            Gets the character name.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.Level">
            <summary>
            Gets the traders level.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.TradingPartner">
            <summary>
            Gets or sets the current trading partner.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.TradingMoney">
            <summary>
            Gets or sets the money which is currently in the trade.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.GuildStatus">
            <summary>
            Gets or sets the short guild identifier.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.Inventory">
            <summary>
            Gets the inventory.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.TemporaryStorage">
            <summary>
            Gets the temporary storage, which holds the items of the trade.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.BackupInventory">
            <summary>
            Gets or sets the backup inventory.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.Money">
            <summary>
            Gets or sets the available money.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.PlayerState">
            <summary>
            Gets the state of the player.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.PersistenceContext">
            <summary>
            Gets the persistence context of the trader. It needs to be updated when a trade finishes.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ITrader.TradeView">
            <summary>
            Gets the trade view.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IWorldObserver">
            <summary>
            Interface of an world observer.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IWorldObserver.WorldView">
            <summary>
            Gets the world view of the observer.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.LocateableExtensions">
            <summary>
            Extensions for mu objects.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.LocateableExtensions.WhereActive``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Filters out inactive (non-alive) locateables.
            </summary>
            <typeparam name="T">Type of elements.</typeparam>
            <param name="locateables">The locateables.</param>
            <returns>
            All active locateables of the given enumeration.
            </returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.LocateableExtensions.IsActive(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Determines whether this instance is active (alive).
            </summary>
            <param name="locateable">The locateable.</param>
            <returns>
              <c>true</c> if the specified locateable is active; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.LocateableExtensions.GetDistanceTo(MUnique.OpenMU.GameLogic.ILocateable,MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Gets the distance to another object.
            </summary>
            <param name="objectFrom">The object from which the distance is calculated.</param>
            <param name="objectTo">The object to which the distance is calculated.</param>
            <returns>The distance between this and another object.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.LocateableExtensions.GetDistanceTo(MUnique.OpenMU.GameLogic.ILocateable,System.Byte,System.Byte)">
            <summary>
            Gets the distance to the specified coordinates.
            </summary>
            <param name="objectFrom">The object from which the distance is calculated.</param>
            <param name="x">The x coordinate of the point to which the distance is calculated.</param>
            <param name="y">The y coordinate of the point to which the distance is calculated.</param>
            <returns>The distance between this and the specified coordinates.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.LocateableExtensions.IsInRange(MUnique.OpenMU.GameLogic.ILocateable,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether the specified coordinate is in the specified range of the object.
            </summary>
            <param name="obj">The object.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coorindate.</param>
            <param name="range">The maximum range.</param>
            <returns><c>True</c>, if rhe specified coordinate is in the specified range of the object; Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.LocateableExtensions.GetDirectionTo(MUnique.OpenMU.GameLogic.ILocateable,MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Gets the direction to another object.
            </summary>
            <param name="objectFrom">The object from which the direction is calculated.</param>
            <param name="objectTo">The object to which the direction is calculated.</param>
            <returns>The direction between this and another object.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.LocateableExtensions.IsAtSafezone(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Determines whether the object is at the safezone of his current map.
            </summary>
            <param name="obj">The object.</param>
            <returns>True, if it is on the safezone of his current map; Otherwise, false.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.NPC.BasicMonsterIntelligence">
            <summary>
            A basic monster AI which is pretty basic.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.BasicMonsterIntelligence.#ctor(MUnique.OpenMU.GameLogic.GameMap)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.NPC.BasicMonsterIntelligence"/> class.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.BasicMonsterIntelligence.Monster">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.BasicMonsterIntelligence.Start">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.BasicMonsterIntelligence.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.BasicMonsterIntelligence.RegisterHit(MUnique.OpenMU.GameLogic.IAttackable)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.NPC.Monster">
            <summary>
            The implementation of a monster, which can attack players.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.#ctor(MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea,MUnique.OpenMU.DataModel.Configuration.MonsterDefinition,MUnique.OpenMU.GameLogic.GameMap,MUnique.OpenMU.GameLogic.IDropGenerator,MUnique.OpenMU.GameLogic.IMonsterIntelligence)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.NPC.Monster"/> class.
            </summary>
            <param name="spawnInfo">The spawn information.</param>
            <param name="stats">The stats.</param>
            <param name="map">The map on which this instance will spawn.</param>
            <param name="dropGenerator">The drop generator.</param>
            <param name="monsterIntelligence">The monster intelligence.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.Monster.IsWalking">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:MUnique.OpenMU.GameLogic.NPC.Monster"/> is walking.
            </summary>
            <value>
              <c>true</c> if walking; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.Monster.Health">
            <summary>
            Gets or sets the current health.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.Monster.Alive">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.Monster.Attributes">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.Monster.StepDelay">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.Monster.NextDirections">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.Monster.WalkTarget">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.Attack(MUnique.OpenMU.GameLogic.IAttackable)">
            <summary>
            Attacks the specified player.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.WalkTo(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Walks to the target object.
            </summary>
            <param name="target">The target object.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.AttackBy(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Entities.SkillEntry)">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.ReflectDamage(MUnique.OpenMU.GameLogic.IAttackable,System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.RandomMove">
            <summary>
            Moves this instance randomly.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.Move(System.Byte,System.Byte,MUnique.OpenMU.GameLogic.Views.MoveType)">
            <summary>
            Moves the instance to the specified position.
            </summary>
            <param name="newx">The new x coordinate.</param>
            <param name="newy">The new y coordinate.</param>
            <param name="type">The type of moving.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.Monster.Respawn">
            <summary>
            Respawns this instance on the map.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter">
            <summary>
            The implementation of a non-player-character (Monster) which can not be attacked or attack.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.#ctor(MUnique.OpenMU.DataModel.Configuration.MonsterSpawnArea,MUnique.OpenMU.DataModel.Configuration.MonsterDefinition,MUnique.OpenMU.GameLogic.GameMap)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter"/> class.
            </summary>
            <param name="spawnInfo">The spawn information.</param>
            <param name="stats">The stats.</param>
            <param name="map">The map on which this instance will spawn.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Id">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Definition">
            <summary>
            Gets or sets the stats of this instance.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.X">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Y">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Rotation">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Observers">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.ObserverLock">
            <summary>
            Gets the lock for <see cref="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Observers"/>.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.CurrentMap">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.SpawnArea">
            <summary>
            Gets or sets the spawn area of this instance.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.NewBucket">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.OldBucket">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.AddObserver(MUnique.OpenMU.GameLogic.IWorldObserver)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.RemoveObserver(MUnique.OpenMU.GameLogic.IWorldObserver)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="dispose"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.Move(System.Byte,System.Byte,MUnique.OpenMU.GameLogic.Views.MoveType)">
            <summary>
            Moves the instance to the specified position.
            </summary>
            <param name="newx">The new x coordinate.</param>
            <param name="newy">The new y coordinate.</param>
            <param name="type">The type of moving.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter.GetSpawnDirection(MUnique.OpenMU.DataModel.Configuration.Direction)">
            <summary>
            Gets the spawn direction.
            </summary>
            <param name="configuredDirection">The configured direction.</param>
            <returns>The spawn direction.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.ViewExtensions">
            <summary>
            Extensions which are used by the remote views.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ViewExtensions.ConstantPlayerId">
            <summary>
            The constant player identifier which is sent to the player of a view to identify itself.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ViewExtensions.GetId(MUnique.OpenMU.GameLogic.IIdentifiable,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Gets the <see cref="P:MUnique.OpenMU.GameLogic.IIdentifiable.Id"/> of the <paramref name="identifiable"/> if it's not the same object
            instance as <paramref name="playerOfView"/>; Otherwise, the <see cref="F:MUnique.OpenMU.GameLogic.Views.ViewExtensions.ConstantPlayerId"/> is returned.
            </summary>
            <param name="identifiable">The identifiable.</param>
            <param name="playerOfView">The player of view.</param>
            <returns>
            The <see cref="P:MUnique.OpenMU.GameLogic.IIdentifiable.Id"/> of the <paramref name="identifiable"/> if it's not the same object
            instance as <paramref name="playerOfView"/>; Otherwise, the <see cref="F:MUnique.OpenMU.GameLogic.Views.ViewExtensions.ConstantPlayerId"/> is returned.
            </returns>
            <remarks>
            This allows us to give players a dynamic <see cref="P:MUnique.OpenMU.GameLogic.IIdentifiable.Id"/>, depending on the current game map.
            And the dynamic id allows us to add players of different game server instances to the same map instance
            without forcing the player client connect to another server.
            Examples for such shared maps are loren valley, crywolf, land of trials, loren market etc.
            </remarks>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ViewExtensions.GetObject(MUnique.OpenMU.GameLogic.Player,System.UInt16)">
            <summary>
            Gets the object with the specified id which is on the same map as the specified player.
            </summary>
            <param name="player">The player.</param>
            <param name="id">The identifier.</param>
            <returns>The object with the specified id which is on the same map as the specified player.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.IChatView">
            <summary>
            Interface for the chat view.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IChatView.ChatMessage(System.String,System.String,MUnique.OpenMU.GameLogic.Views.ChatMessageType)">
            <summary>
            Sends a Chat Message to the Player
            </summary>
            <param name="message">The message which should be shown in the view.</param>
            <param name="sender">The character name of the sender.</param>
            <param name="type">The type of the chat message</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.GuildCreateErrorDetail">
            <summary>
            Guild create error detail code.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildCreateErrorDetail.None">
            <summary>
            No error occured.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildCreateErrorDetail.GuildAlreadyExist">
            <summary>
            The guild already exists.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.GuildKickSuccess">
            <summary>
            Type of the guild kick success.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildKickSuccess.Failed">
            <summary>
            Kicking failed. Player stays at guild.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildKickSuccess.KickSucceeded">
            <summary>
            Kicking succeeded. Player left the guild.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildKickSuccess.GuildDisband">
            <summary>
            Kicking succeeded and guild got disbanded.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.GuildRequestAnswerResult">
            <summary>
            Guild join request answer result.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildRequestAnswerResult.Refused">
            <summary>
            Refused by the guild master.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildRequestAnswerResult.Accepted">
            <summary>
            Accepted by the guild master.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.GuildRequestAnswerResult.AlreadyHaveGuild">
            <summary>
            The player already has a guild.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.IGuildView">
            <summary>
            The guild view.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.PlayerLeftGuild(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            A Player the left his guild.
            </summary>
            <param name="player">The player who left his guild.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.ShowGuildCreateResult(MUnique.OpenMU.GameLogic.Views.GuildCreateErrorDetail)">
            <summary>
            Shows the guild create result.
            </summary>
            <param name="errorDetail">The error detail.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.ShowGuildInfo(System.Byte[])">
            <summary>
            Shows the guild information of a previously requested guild.
            </summary>
            <param name="guildInfo">The guild information.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.AssignPlayersToGuild(System.Collections.Generic.ICollection{MUnique.OpenMU.GameLogic.Player},System.Boolean)">
            <summary>
            Assigns the players to their guilds.
            </summary>
            <param name="guildPlayers">The players of a guild.</param>
            <param name="appearsNew">If set to <c>true</c>,the player just appeared in the view. Otherwise, the players were already in the view, and freshly assigned to the guild.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.GuildKickResult(MUnique.OpenMU.GameLogic.Views.GuildKickSuccess)">
            <summary>
            Shows the result of the kick request.
            </summary>
            <param name="successCode">The success code.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.ShowGuildList(System.Collections.Generic.IEnumerable{MUnique.OpenMU.Interfaces.GuildListEntry})">
            <summary>
            Shows the guild list.
            </summary>
            <param name="players">The players of the guild.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.ShowGuildJoinRequest(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Shows the guild join request.
            </summary>
            <param name="requester">The requester.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.ShowGuildCreationDialog">
            <summary>
            Shows the guild creation dialog.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IGuildView.GuildJoinResponse(MUnique.OpenMU.GameLogic.Views.GuildRequestAnswerResult)">
            <summary>
            Shows the guild join response from the guild master.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.ItemPriceResult">
            <summary>
            Result of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.BuyRequestAction"/>.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ItemPriceResult.Failed">
            <summary>
            Failed, e.g. because the shop feature is deactivated.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ItemPriceResult.Success">
            <summary>
            The price has been set successfully.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ItemPriceResult.ItemSlotOutOfRange">
            <summary>
            Failed because the item slot was out of range.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ItemPriceResult.ItemNotFound">
            <summary>
            Failed because the item could not be found.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ItemPriceResult.PriceNegative">
            <summary>
            Failed because the price was negative.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ItemPriceResult.ItemIsBlocked">
            <summary>
            Failed because the item is blocked.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ItemPriceResult.CharacterLevelTooLow">
            <summary>
            Failed because the character level is too low (below level 6).
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.IInventoryView">
            <summary>
            The inventory view.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemMoved(MUnique.OpenMU.DataModel.Entities.Item,System.Byte,MUnique.OpenMU.GameLogic.Storages)">
            <summary>
            An item got moved.
            </summary>
            <param name="item">The item.</param>
            <param name="toSlot">The new slot index.</param>
            <param name="storage">The new storage.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemMoveFailed(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Moving an item failed.
            </summary>
            <param name="item">The item which could not be moved. Null, if requested item could not be determined.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.UpdateMoney">
            <summary>
            Updates the money value.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemUpgraded(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Item has been upgraded.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.UpdateInventoryList">
            <summary>
            Updates the inventory list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemConsumed(System.Byte,System.Boolean)">
            <summary>
            Notifies the client that an item got consumed (or not).
            </summary>
            <param name="inventorySlot">The inventory slot.</param>
            <param name="success">If set to <c>true</c> the item got consumed; otherwise not.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemDurabilityChanged(MUnique.OpenMU.DataModel.Entities.Item,System.Boolean)">
            <summary>
            Notifies the client that the durability of the item changed.
            </summary>
            <param name="item">The item.</param>
            <param name="causedByConsumption">Flag which indicates if the durability change was caused by consuming the item.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemAppear(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Notifies the client that a new item appears in the inventory.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.BuyNpcItemFailed">
            <summary>
            Notifies the client that the item could not be bought from the npc.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.NpcItemBought(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Notifies the client that the item got bought from the npc.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemSoldToNpc(System.Boolean)">
            <summary>
            Notifies the client that the item got sold to the npc (or not).
            </summary>
            <param name="success">If set to <c>true</c> the item has been sold; otherwise not.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemDropResult(System.Byte,System.Boolean)">
            <summary>
            Notifies the client that an item got dropped from the inventory (or not).
            </summary>
            <param name="slot">The slot from which the item has been dropped (or not).</param>
            <param name="success">If set to <c>true</c> the item has been dropped; otherwise not.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemSoldByPlayerShop(System.Byte,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Notifies the client that his item from the player shop has been sold to another player.
            </summary>
            <param name="slot">The slot of the item.</param>
            <param name="buyer">The buyer.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemBoughtFromPlayerShop(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Notifies the client that an item has been bought from another players shop.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IInventoryView.ItemPriceSetResponse(System.Byte,MUnique.OpenMU.GameLogic.Views.ItemPriceResult)">
            <summary>
            Notifies the client about the result of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.BuyRequestAction"/>.
            </summary>
            <param name="itemSlot">The item slot.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.IPartyView">
            <summary>
            The view for party informations.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPartyView.ShowPartyRequest(MUnique.OpenMU.GameLogic.IPartyMember)">
            <summary>
            Shows the party request.
            </summary>
            <param name="requester">The requester.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPartyView.PartyClosed">
            <summary>
            The party has been closed.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPartyView.UpdatePartyList">
            <summary>
            Updates the party list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPartyView.UpdatePartyHealth">
            <summary>
            Updates the party health.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPartyView.IsHealthUpdateNeeded">
            <summary>
            Determines whether a health update is needed.
            </summary>
            <returns>If set to <c>true</c>, a health update is needed; Otherwise not.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.TradeButtonState">
            <summary>
            The state of the trade button.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeButtonState.Unchecked">
            <summary>
            Trade button is not pressed. It means that the trade is not yet accepted by the trader.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeButtonState.Checked">
            <summary>
            Trade Button is pressed. It means that the trade is accepted by the trader.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeButtonState.Red">
            <summary>
            This state is only sent to the client. After some seconds the client is changing back to normal Unchecked.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.TradeResult">
            <summary>
            The result of a closed trade (both players pressed 'OK').
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeResult.Cancelled">
            <summary>
            The trade was cancelled.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeResult.Success">
            <summary>
            The trade was successful.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeResult.FailedByFullInventory">
            <summary>
            The trade failed because of a full inventory.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeResult.TimedOut">
            <summary>
            The trade failed because the request timed out.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.TradeResult.FailedByItemsNotAllowedToTrade">
            <summary>
            The trade failed because one or more items were not allowed to trade
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.ITradeView">
            <summary>
            Interface for the trade view.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.TradeItemDisappear(System.Byte,MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            An item has been removed from the trade window by the other player.
            </summary>
            <remarks>
            It will be also sent when an item is moved within the trade window.
            </remarks>
            <param name="fromSlot">The slot from which the item has been removed.</param>
            <param name="item">The item which has been removed.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.TradeItemAppear(System.Byte,MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            An item has been added to the trade window by the other player.
            </summary>
            <remarks>
            It is also sent when an item gets moved inside the trade window. In this case a TradeItemDisappear message was sent before for the old slot.
            </remarks>
            <param name="toSlot">The slot at which the item has been added.</param>
            <param name="item">The item which has been added.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.ShowTradeRequest(MUnique.OpenMU.GameLogic.ITrader)">
            <summary>
            Shows the trade request.
            </summary>
            <param name="requester">The requester.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.ShowTradeRequestAnswer(System.Boolean)">
            <summary>
            The requested trade partner has answered the request. Information about the tradingpartner can be found at ITrader.TradingPartner.
            </summary>
            <param name="tradeAccepted">if set to <c>true</c> the trade has been accepted and will be opened.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.TradeFinished(MUnique.OpenMU.GameLogic.Views.TradeResult)">
            <summary>
            The trade process has finished with the specified result.
            </summary>
            <param name="tradeResult">The trade result.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.ChangeTradeButtonState(MUnique.OpenMU.GameLogic.Views.TradeButtonState)">
            <summary>
            Changes the state of the other players trade button.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.SetTradeMoney(System.UInt32)">
            <summary>
            Sets the amount of money which should be traded to the other player.
            </summary>
            <remarks>
            This message is sent when the trading partner put a certain amount of zen (also 0) into the trade.
            It overrides all previous sent zen values.
            </remarks>
            <param name="moneyAmount">The money amount.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.ITradeView.RequestedTradeMoneyHasBeenSet">
            <summary>
            Notifies the client that the money amount which has been previously requested to be set,
            has been successfully placed into the trade.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.IWorldView">
            <summary>
            Interface for the world view. The world view shows the terrain, the objects and their visible (to other players) actions on the map.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.ObjectGotKilled(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.GameLogic.IAttackable)">
            <summary>
            An object got killed by another object.
            </summary>
            <param name="killedObject">The killed object.</param>
            <param name="killerObject">The object which killed the object.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.ObjectMoved(MUnique.OpenMU.GameLogic.ILocateable,MUnique.OpenMU.GameLogic.Views.MoveType)">
            <summary>
            An object moved on the map.
            </summary>
            <param name="movedObject">The moved object.</param>
            <param name="moveType">Type of the move.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.ShowDroppedItems(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.DroppedItem},System.Boolean)">
            <summary>
            Shows the dropped items.
            </summary>
            <param name="droppedItems">The dropped items.</param>
            <param name="freshDrops">if set to <c>true</c> this items are fresh drops; Otherwise they are already laying on the ground when reaching a newly discovered part of the map.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.DroppedItemsDisappeared(System.Collections.Generic.IEnumerable{System.UInt16})">
            <summary>
            The item drops disappeared from the ground.
            </summary>
            <param name="disappearedItemIds">The ids of the disappeared items.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.ShowAnimation(MUnique.OpenMU.GameLogic.IIdentifiable,System.Byte,MUnique.OpenMU.GameLogic.IIdentifiable,System.Byte)">
            <summary>
            Shows the animation.
            </summary>
            <param name="animatingObj">The animating object.</param>
            <param name="animation">The animation.</param>
            <param name="targetObj">The target object.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.MapChange">
            <summary>
            Will be called then the map got changed. The new map and coordinates are defined in the player.SelectedCharacter.CurrentMap.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.ObjectsOutOfScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.IIdentifiable})">
            <summary>
            Objects are out of scope.
            </summary>
            <param name="objects">The objects.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.NewPlayersInScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.Player})">
            <summary>
            Shows the new players in scope.
            </summary>
            <param name="newObjects">The new objects.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.NewNpcsInScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter})">
            <summary>
            Shows the new npcs in scope.
            </summary>
            <param name="newObjects">The new objects.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.UpdateRotation">
            <summary>
            Updates the rotation of the own player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.ShowSkillAnimation(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Configuration.Skill)">
            <summary>
            Shows the skill animation.
            </summary>
            <param name="attackingPlayer">The attacking player.</param>
            <param name="target">The target.</param>
            <param name="skill">The skill.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IWorldView.ShowAreaSkillAnimation(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.DataModel.Configuration.Skill,System.Byte,System.Byte,System.Byte)">
            <summary>
            Shows the area skill animation.
            </summary>
            <param name="player">The player.</param>
            <param name="skill">The skill.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="rotation">The rotation.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.LetterSendSuccess">
            <summary>
            The letter send success flag.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LetterSendSuccess.TryAgain">
            <summary>
            There was a problem and he should try again.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LetterSendSuccess.Success">
            <summary>
            The letter has been sent successfully.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LetterSendSuccess.MailboxFull">
            <summary>
            The mailbox of the recipient is full.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LetterSendSuccess.ReceiverNotExists">
            <summary>
            The receiver does not exist.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LetterSendSuccess.CantSendToYourself">
            <summary>
            A letter can't be sent to yourself.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LetterSendSuccess.NotEnoughMoney">
            <summary>
            The sender doesn't have enough money to send a letter.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.IMessengerView">
            <summary>
            The view for the messenger (MUssenger).
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.InitializeMessenger(System.Int32)">
            <summary>
            Initializes the messenger. Adds the letters and the friends to the view.
            </summary>
            <param name="maxLetters">The maximum number of letters a player can have in its inbox.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.ShowFriendInvitationResult(System.Boolean,System.UInt32)">
            <summary>
            Shows the friend invitation result.
            </summary>
            <param name="result">If set to <c>true</c>, the invitation has been sent to the inviteds player.</param>
            <param name="requestId">The request identifier.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.AddToLetterList(MUnique.OpenMU.Interfaces.LetterHeader,System.UInt16,System.Boolean)">
            <summary>
            Adds a letter to the view.
            </summary>
            <param name="letter">Letter which should be added.</param>
            <param name="index">The index of the letter in the letter list.</param>
            <param name="newLetter">Determines if this letter is new, that means it got just sent.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.ShowFriendRequest(System.String)">
            <summary>
            Shows the friend request.
            </summary>
            <param name="requester">The requesters character name.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.FriendStateUpdate(System.String,System.Int32)">
            <summary>
            Updates the online state (server id) of a friend.
            </summary>
            <param name="friend">The friends character name.</param>
            <param name="serverId">The server identifier.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.FriendAdded(System.String)">
            <summary>
            A friend has been added to the friendlist.
            </summary>
            <param name="friendname">The character name of the friend.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.FriendDeleted(System.String)">
            <summary>
            A friend has been deleted from the friendlist.
            </summary>
            <param name="deletedFriend">The deleted friend.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.ChatRoomCreated(MUnique.OpenMU.Interfaces.ChatServerAuthenticationInfo,System.String,System.Boolean)">
            <summary>
            A chat room has been created for this player and his friend.
            </summary>
            <param name="authenticationInfo">The id of the created chat room.</param>
            <param name="friendName">The character name of the friend which is expected in the chat room.</param>
            <param name="success">If set to <c>true</c>, the chat room has been created successfully; Otherwise not.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.ShowLetter(MUnique.OpenMU.DataModel.Entities.LetterBody)">
            <summary>
            Shows the letter body.
            </summary>
            <param name="letterBody">The letter body.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.LetterDeleted(System.UInt16)">
            <summary>
            The letter has been deleted.
            </summary>
            <param name="letterIndex">The letter header index.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IMessengerView.LetterSendResult(MUnique.OpenMU.GameLogic.Views.LetterSendSuccess,System.UInt32)">
            <summary>
            Shows the letter send result, of the previously sent letter.
            </summary>
            <param name="success">The success.</param>
            <param name="letterId">The client side id of the letter.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.ChatMessageType">
            <summary>
            The type of a chat message.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Normal">
            <summary>
            A normal chat message which is sent to all observing players.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Whisper">
            <summary>
            A whispered chat message, which only the recipient can read.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Party">
            <summary>
            A chat message which can only be read inside the same party.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Guild">
            <summary>
            A chat message which can only be read inside the same guild.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Alliance">
            <summary>
            A chat message which can only be read inside the same guild alliance.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Gens">
            <summary>
            A chat message which can only be read inside the same gens side.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Command">
            <summary>
            A command message.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.MoveType">
            <summary>
            Specifies the move type of objects.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.MoveType.Walk">
            <summary>
            Moving by walking.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.MoveType.Instant">
            <summary>
            Moving by instantly moving the object on the map, without animations.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.CharacterDeleteResult">
            <summary>
            Result of a character delete request.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.CharacterDeleteResult.Unsuccessful">
            <summary>
            Deleting was not successful.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.CharacterDeleteResult.Successful">
            <summary>
            Deleting was successful.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.CharacterDeleteResult.WrongSecurityCode">
            <summary>
            Deleting was not successful because a wrong security code was entered.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.LoginResult">
            <summary>
            The result of a login request.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.InvalidPassword">
            <summary>
            The password was wrong.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.OK">
            <summary>
            The login succeeded.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.AccountInvalid">
            <summary>
            The account is invalid.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.AccountAlreadyConnected">
            <summary>
            The account is already connected.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.ServerIsFull">
            <summary>
            The server is full.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.AccountBlocked">
            <summary>
            The account is blocked.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.WrongVersion">
            <summary>
            The client has a wrong version.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.ConnectionError">
            <summary>
            An error occured during connection.
            </summary>
            <remarks>I think in the original game server it is the connection to some of the servers behind.</remarks>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.ConnectionClosed3Fails">
            <summary>
            Connection closed because of three failed login requests.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.NoChargeInfo">
            <summary>
            There is no payment information.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.SubscriptionTermOver">
            <summary>
            Subscription term is over.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.SubscriptionTimeOver">
            <summary>
            Subscription time is over.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.OnlyPlayersOver15Yrs">
            <summary>
            Only players over 15 years are allowed.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.TemporaryBlocked">
            <summary>
            The account is temporarily blocked.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LoginResult.BadCountry">
            <summary>
            The client connected from a blocked country.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.LogoutType">
            <summary>
            The type of the logout.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LogoutType.CloseGame">
            <summary>
            This is sent when the player closes the game.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LogoutType.BackToCharacterSelection">
            <summary>
            This is sent by the client when the player wants to go back to the character selection screen.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Views.LogoutType.BackToServerSelection">
            <summary>
            This is sent by the client when the player wants to go back to the server selection screen.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Views.IPlayerView">
            <summary>
            The main view of the player.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Views.IPlayerView.PartyView">
            <summary>
            Gets the party view.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Views.IPlayerView.MessengerView">
            <summary>
            Gets the messenger view.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Views.IPlayerView.TradeView">
            <summary>
            Gets the trade view.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Views.IPlayerView.GuildView">
            <summary>
            Gets the guild view.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Views.IPlayerView.WorldView">
            <summary>
            Gets the world view.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Views.IPlayerView.InventoryView">
            <summary>
            Gets the inventory view.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowCharacterList">
            <summary>
            Shows the character list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowCharacterCreationFailed">
            <summary>
            Shows that the character creation failed.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowCreatedCharacter(MUnique.OpenMU.DataModel.Entities.Character)">
            <summary>
            Shows the created character.
            </summary>
            <param name="character">The character.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.AppearanceChanged(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            The appearance of a player changed.
            </summary>
            <param name="changedPlayer">The changed player.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.AddSkill(MUnique.OpenMU.DataModel.Configuration.Skill)">
            <summary>
            Adds the skill to the skill list.
            </summary>
            <param name="skill">The skill.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.RemoveSkill(MUnique.OpenMU.DataModel.Configuration.Skill)">
            <summary>
            Removes the skill from the skill list.
            </summary>
            <param name="skill">The skill.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.DrinkAlcohol">
            <summary>
            Shows the effects of drinking alcohol.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.RequestedItemConsumptionFailed">
            <summary>
            Shows that the requested item consumption failed.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowCharacterDeleteResponse(MUnique.OpenMU.GameLogic.Views.CharacterDeleteResult)">
            <summary>
            Shows the character delete response result.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateCurrentManaAndHp">
            <summary>
            Updates the current mana and hp bars.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateCurrentMana">
            <summary>
            Updates the current mana.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateCurrentHealth">
            <summary>
            Updates the current health.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateMaximumMana">
            <summary>
            Updates the maximum mana.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateMaximumHealth">
            <summary>
            Updates the maximum health.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateLevel">
            <summary>
            Updates the level.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.AddExperience(System.Int32,MUnique.OpenMU.GameLogic.IIdentifiable)">
            <summary>
            Adds Experience after the object has been killed.
            </summary>
            <param name="gainedExperience">The experience gain.</param>
            <param name="killedObject">The killed object.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.CloseVault">
            <summary>
            Closes the vault.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowVault">
            <summary>
            Shows the vault.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateCharacterStats">
            <summary>
            Updates the character stats.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowHit(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.GameLogic.HitInfo)">
            <summary>
            Shows the hit damage over of an object.
            </summary>
            <param name="hitReceiver">The hit receiver.</param>
            <param name="hitInfo">The hit information.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ActivateMagicEffect(MUnique.OpenMU.GameLogic.MagicEffect,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Activates the magic effect.
            </summary>
            <param name="effect">The effect.</param>
            <param name="affectedPlayer">The affected player.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.DeactivateMagicEffect(MUnique.OpenMU.GameLogic.MagicEffect,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Deactivates the magic effect.
            </summary>
            <param name="effect">The effect.</param>
            <param name="affectedPlayer">The affected player.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.UpdateSkillList">
            <summary>
            Updates the skill list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowMessage(System.String,MUnique.OpenMU.Interfaces.MessageType)">
            <summary>
            Shows the message.
            </summary>
            <param name="message">The message.</param>
            <param name="messageType">Type of the message.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowShopItemList(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Shows the shop item list of the requested players shop.
            </summary>
            <param name="requestedPlayer">The requested player.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.PlayerShopOpened(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            A player opened his shop.
            </summary>
            <param name="player">The player who opened the shop.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowShopsOfPlayers(System.Collections.Generic.ICollection{MUnique.OpenMU.GameLogic.Player})">
            <summary>
            Shows the shops of players.
            </summary>
            <param name="playersWithShop">The players with shop.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.PlayerShopClosed(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            A player closed his shop.
            </summary>
            <param name="playerWithClosedShop">Player of closing shop.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.Logout(MUnique.OpenMU.GameLogic.Views.LogoutType)">
            <summary>
            Logouts with the specified logout type.
            </summary>
            <param name="logoutType">Type of the logout.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.CharacterFocused(MUnique.OpenMU.DataModel.Entities.Character)">
            <summary>
            A characters has been focused on the character selection screen.
            </summary>
            <param name="character">The character which has been focused.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.StatIncreaseResult(MUnique.OpenMU.AttributeSystem.AttributeDefinition,System.Boolean)">
            <summary>
            Shows the stat increase result.
            </summary>
            <param name="statType">Type of the stat.</param>
            <param name="success">if set to <c>true</c> the increment was successful.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.OpenNpcWindow(MUnique.OpenMU.DataModel.Configuration.NpcWindow)">
            <summary>
            Opens the Monster window.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowMerchantStoreItemList(System.Collections.Generic.ICollection{MUnique.OpenMU.DataModel.Entities.Item})">
            <summary>
            Shows the merchant store item list.
            </summary>
            <param name="storeItems">The store items.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowLoginResult(MUnique.OpenMU.GameLogic.Views.LoginResult)">
            <summary>
            Shows the login result.
            </summary>
            <param name="loginResult">The login result.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Views.IPlayerView.ShowLoginWindow">
            <summary>
            Shows the login window.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Walker">
            <summary>
            Class which manages walking for instances of <see cref="T:MUnique.OpenMU.GameLogic.ISupportWalk"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Walker.#ctor(MUnique.OpenMU.GameLogic.ISupportWalk)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Walker"/> class.
            </summary>
            <param name="walkSupporter">The walk supporter.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Walker.Start">
            <summary>
            Starts to walk.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Walker.Stop">
            <summary>
            Stops the walk.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Walker.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Walker.WalkStep(System.Object)">
            <summary>
            Performs the next step of a walk.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ObjectExtensions">
            <summary>
            Extensions for objects.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObjectExtensions.GetAsEnumerable``1(``0)">
            <summary>
            Gets a single object as enumerable.
            </summary>
            <typeparam name="T">The type of the object</typeparam>
            <param name="obj">The object.</param>
            <returns>The enumerable with <paramref name="obj"/> as the only result.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ObservableExtensions">
            <summary>
            Extensions for <see cref="T:MUnique.OpenMU.GameLogic.IObservable"/> objects.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObservableExtensions.ForEachObservingPlayer(MUnique.OpenMU.GameLogic.IObservable,System.Action{MUnique.OpenMU.GameLogic.Player},System.Boolean)">
            <summary>
            Executes the action for all observing players of the observable.
            </summary>
            <param name="observable">The observable.</param>
            <param name="action">The action.</param>
            <param name="includeThis">if set to <c>true</c> the <paramref name="action"/> should be done for <paramref name="observable"/> too.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObservableExtensions.GetObservingPlayerWithId(MUnique.OpenMU.GameLogic.IObservable,System.UInt16)">
            <summary>
            Gets the observing player with the specified identifier, if found. Otherwise, null.
            </summary>
            <param name="observable">The observable.</param>
            <param name="playerId">The player identifier.</param>
            <returns>The observing player with the specified identifier, if found. Otherwise, null.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter">
            <summary>
            Adapts the incoming calls from the <see cref="T:MUnique.OpenMU.GameLogic.IBucketMapObserver"/> to the <see cref="T:MUnique.OpenMU.GameLogic.Views.IWorldView"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.#ctor(MUnique.OpenMU.GameLogic.IWorldObserver,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter" /> class.
            </summary>
            <param name="adaptee">The adaptee.</param>
            <param name="infoRange">The information range.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.InfoRange">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.ObservingBuckets">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.LocateableAdded(System.Object,MUnique.OpenMU.GameLogic.BucketItemEventArgs{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.LocateableRemoved(System.Object,MUnique.OpenMU.GameLogic.BucketItemEventArgs{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.LocateablesOutOfScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.NewLocateablesInScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ObserverToWorldViewAdapter.ClearObservingObjectsList">
            <summary>
            Clears the observing object list.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.AppleConsumeHandler">
            <summary>
            Consume handler for apples.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.AppleConsumeHandler.Multiplier">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BaseConsumeHandler">
            <summary>
            Base class of an item consumation handler.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BaseConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BigHealthPotionConsumeHandler">
            <summary>
            Consume handler for big health potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BigHealthPotionConsumeHandler.Multiplier">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BigManaPotionConsumeHandler">
            <summary>
            Consume handler for gib mana potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BigManaPotionConsumeHandler.Multiplier">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BigShieldPotionConsumeHandler">
            <summary>
            Consume handler for large shield potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BigShieldPotionConsumeHandler.RecoverPercent">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HigherRefineStoneConsumeHandler">
            <summary>
            Consume handler for the Lower Refine Stone which increases the item option of <see cref="P:MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionTypes.HarmonyOption"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HigherRefineStoneConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HigherRefineStoneConsumeHandler" /> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler">
            <summary>
            An item consume handler which upgrades the target item.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider,MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler"/> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemFailResult">
            <summary>
            Specifies what should happen with the item, if the upgrading failed randomly.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemFailResult.SetOptionToLevelOne">
            <summary>
            Sets the option to level one.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemFailResult.DecreaseOptionByOne">
            <summary>
            Decreases the option by one level.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemFailResult.DecreaseOptionByOneOrRemove">
            <summary>
            Decreases the option by one level, or removes the option if the level would reach 0.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.Configuration">
            <summary>
            Gets the upgrade configuration.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ModifyItem(MUnique.OpenMU.DataModel.Entities.Item,MUnique.OpenMU.Persistence.IContext)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration">
            <summary>
            The upgrade configuration.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.OptionType">
            <summary>
            Gets or sets the type of the option.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.AddsOption">
            <summary>
            Gets or sets a value indicating whether the handler adds option, if the item does not already have it.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.IncreasesOption">
            <summary>
            Gets or sets a value indicating whether the handler increases the option.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.SuccessChance">
            <summary>
            Gets or sets the success chance between 0 and 1.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.FailResult">
            <summary>
            Gets or sets what should happen with the item if the upgrade fails because of no success.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.BoostOptionType">
            <summary>
            Gets or sets the option type which can boost the success rate.
            </summary>
            <remarks>
            e.g. luck option which adds 25 per cent.
            </remarks>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.SuccessChanceBoost">
            <summary>
            Gets or sets the success chance boost if the target item has the option of type specified in <see cref="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemUpgradeConsumeHandler.ItemUpgradeConfiguration.BoostOptionType"/>.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LowerRefineStoneConsumeHandler">
            <summary>
            Consume handler for the Lower Refine Stone which increases the item option of <see cref="P:MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionTypes.HarmonyOption"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LowerRefineStoneConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LowerRefineStoneConsumeHandler" /> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.MiddleHealthPotionConsumeHandler">
            <summary>
            Consume handler for middle health potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.MiddleHealthPotionConsumeHandler.Multiplier">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.MiddleManaPotionConsumeHandler">
            <summary>
            Consume handler for middle health potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.MiddleManaPotionConsumeHandler.Multiplier">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.MiddleShieldPotionConsumeHandler">
            <summary>
            Consume handler for middle shield potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.MiddleShieldPotionConsumeHandler.RecoverPercent">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SmallHealthPotionConsumeHandler">
            <summary>
            Consume handler for small health potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SmallHealthPotionConsumeHandler.Multiplier">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SmallManaPotionConsumeHandler">
            <summary>
            Consume handler for small health potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SmallManaPotionConsumeHandler.Multiplier">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SmallShieldPotionConsumeHandler">
            <summary>
            Consume handler for small shield potions.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SmallShieldPotionConsumeHandler.RecoverPercent">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler">
            <summary>
            Consume handler which can recover attributes.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.RecoverPercent">
            <summary>
            Gets the recover percent of the value of the <see cref="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.MaximumAttribute"/>.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.CurrentAttribute">
            <summary>
            Gets the attribute which contains the value which should get recovered.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.MaximumAttribute">
            <summary>
            Gets the attribute which contains the maximum value of the <see cref="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.CurrentAttribute"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.GetAdditionalRecover(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Gets the additional recover value which is usually a fixed value influenced by player attributes.
            </summary>
            <param name="player">The player.</param>
            <returns>The additional recover value.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.ManaHealthConsumeHandler">
            <summary>
            The base class for health and mana recoverage.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.ManaHealthConsumeHandler.Multiplier">
            <summary>
            Gets the multiplier of 50 for the additional recover.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.ManaHealthConsumeHandler.RecoverPercent">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.RecoverConsumeHandler.ManaHealthConsumeHandler.GetAdditionalRecover(MUnique.OpenMU.GameLogic.Player)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HarmonyJewelConsumeHandler">
            <summary>
            The consume handler for the harmony jewel.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HarmonyJewelConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HarmonyJewelConsumeHandler" /> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemConsumeAction">
            <summary>
            Action to consume an item.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemConsumeAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemConsumeAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemConsumeAction.HandleConsumeRequest(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <summary>
            Handles the consume request.
            </summary>
            <param name="player">The player.</param>
            <param name="inventorySlot">The inventory slot.</param>
            <param name="inventoryTargetSlot">The inventory target slot.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.AlcoholConsumeHandler">
            <summary>
            The alcohol consume handler.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.AlcoholConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BlessJewelConsumeHandler">
            <summary>
            Consume handler for upgrading items up to level 6 using the Jewel of Bless.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BlessJewelConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BlessJewelConsumeHandler"/> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.BlessJewelConsumeHandler.ModifyItem(MUnique.OpenMU.DataModel.Entities.Item,MUnique.OpenMU.Persistence.IContext)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HealthPotionConsumeHandler">
            <summary>
            The consume handler for a potion that recovers health.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HealthPotionConsumeHandler.MaximumAttribute">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HealthPotionConsumeHandler.CurrentAttribute">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.HealthPotionConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.IItemConsumeHandler">
            <summary>
            Consume handler to modify items which are specified by the target slot.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.IItemConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <summary>
            Consumes the item at the specified slot, and reduces its durability by one.
            If the durability has reached 0, the item is getting destroyed.
            If a target slot is specified, the consumation targets the item on this slot (e.g. uprade of an item by a jewel).
            </summary>
            <param name="player">The player which is consuming.</param>
            <param name="itemSlot">The inventory slot of the item which should get consumed.</param>
            <param name="targetSlot">The inventory slot of the item which is affected.</param>
            <returns>The success of the consumation.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemModifyConsumeHandler">
            <summary>
            Consume handler to modify items which are specified by the target slot.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemModifyConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemModifyConsumeHandler"/> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemModifyConsumeHandler.PersistenceContextProvider">
            <summary>
            Gets the repository manager.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemModifyConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemModifyConsumeHandler.ModifyItem(MUnique.OpenMU.DataModel.Entities.Item,MUnique.OpenMU.Persistence.IContext)">
            <summary>
            Modifies the item.
            </summary>
            <param name="item">The item.</param>
            <param name="persistenceContext">The persistence context.</param>
            <returns>Flag indicating whether the modification of the item occured.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LearnablesConsumeHandler">
            <summary>
            Consume handler for items (e.g. scrolls, orbs) which add a skill when being consumed.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LearnablesConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LifeJewelConsumeHandler">
            <summary>
            Consume handler for the Jewel of Life which adds and increases the item option of <see cref="P:MUnique.OpenMU.DataModel.Configuration.Items.ItemOptionTypes.Option"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LifeJewelConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.LifeJewelConsumeHandler" /> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ManaPotionConsumehandler">
            <summary>
            Consume handler for potions which refills the players attribute <see cref="P:MUnique.OpenMU.GameLogic.Attributes.Stats.CurrentMana"/>.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ManaPotionConsumehandler.MaximumAttribute">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ManaPotionConsumehandler.CurrentAttribute">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ManaPotionConsumehandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc />
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.NotImplementedItemConsumeHandler">
            <summary>
            A consume handler which is not implemented yet. It will show a message to the player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.NotImplementedItemConsumeHandler.ConsumeItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ShieldPotionConsumeHandler">
            <summary>
            Consume handler for shield potions, which recover the <see cref="P:MUnique.OpenMU.GameLogic.Attributes.Stats.CurrentShield"/>.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ShieldPotionConsumeHandler.MaximumAttribute">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ShieldPotionConsumeHandler.CurrentAttribute">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SoulJewelConsumeHandler">
            <summary>
            Consume handler for the Jewel of Soul which increases the item level by one until the level of 9 with a chance of 50%.
            </summary>
            <seealso cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.ItemModifyConsumeHandler" />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SoulJewelConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SoulJewelConsumeHandler"/> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SoulJewelConsumeHandler.#ctor(MUnique.OpenMU.Persistence.IPersistenceContextProvider,MUnique.OpenMU.GameLogic.IRandomizer)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SoulJewelConsumeHandler"/> class.
            </summary>
            <param name="persistenceContextProvider">The persistence context provider.</param>
            <param name="randomizer">The randomizer.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ItemConsumeActions.SoulJewelConsumeHandler.ModifyItem(MUnique.OpenMU.DataModel.Entities.Item,MUnique.OpenMU.Persistence.IContext)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.CraftingRequiredItemLink">
            <summary>
            Defines which actual items of the <see cref="P:MUnique.OpenMU.GameLogic.Player.TemporaryStorage"/> are fulfilling a specific item requirement.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.CraftingRequiredItemLink.#ctor(System.Collections.Generic.IEnumerable{MUnique.OpenMU.DataModel.Entities.Item},MUnique.OpenMU.DataModel.Configuration.ItemCrafting.ItemCraftingRequiredItem)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.CraftingRequiredItemLink"/> class.
            </summary>
            <param name="storedItem">The stored item.</param>
            <param name="requiredItem">The required item.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.Items.CraftingRequiredItemLink.StoredItem">
            <summary>
            Gets or sets the stored items of the <see cref="P:MUnique.OpenMU.GameLogic.Player.TemporaryStorage"/>.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerActions.Items.CraftingRequiredItemLink.ItemRequirement">
            <summary>
            Gets or sets the item requirement.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.IItemCraftingHandler">
            <summary>
            Interface for an item crafting handler.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.IItemCraftingHandler.DoMix(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Mixes the items of the <see cref="P:MUnique.OpenMU.GameLogic.Player.TemporaryStorage"/> with this crafting handler.
            </summary>
            <param name="player">The mixing player.</param>
            <returns>The success.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemCraftAction">
            <summary>
            The action to craft items with crafting NPCs.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemCraftAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemCraftAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemCraftAction.MixItems(MUnique.OpenMU.GameLogic.Player,System.Byte)">
            <summary>
            Mixes the items at the currently opened Monster crafter.
            </summary>
            <param name="player">The player.</param>
            <param name="mixTypeId">The mix type identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemStackAction">
            <summary>
            Action to stack items.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemStackAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemStackAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemStackAction.StackItems(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <summary>
            Stacks several items to one stacked item.
            </summary>
            <param name="player">The player which is stacking.</param>
            <param name="stackId">The id of the stacking.</param>
            <param name="stackSize">The size of the requested stack.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemStackAction.UnstackItems(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte)">
            <summary>
            Unstacks the stacked item from the specified slot.
            </summary>
            <param name="player">The player.</param>
            <param name="stackId">The stack identifier.</param>
            <param name="slot">The slot.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.SimpleItemCraftingHandler">
            <summary>
            The simple item crafting handler which can be configured to handle the most crafting requirements.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.SimpleItemCraftingHandler.#ctor(MUnique.OpenMU.GameLogic.IGameContext,MUnique.OpenMU.DataModel.Configuration.ItemCrafting.SimpleCraftingSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.SimpleItemCraftingHandler"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.SimpleItemCraftingHandler.DoMix(MUnique.OpenMU.GameLogic.Player)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.BuyNpcItemAction">
            <summary>
            Action to buy items from a Monster merchant.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.BuyNpcItemAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.BuyNpcItemAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.BuyNpcItemAction.BuyItem(MUnique.OpenMU.GameLogic.Player,System.Byte)">
            <summary>
            Buys the item of the specified slot from the <see cref="P:MUnique.OpenMU.GameLogic.Player.OpenedNpc"/> merchant store.
            </summary>
            <param name="player">The player who buys the item.</param>
            <param name="slot">The slot of the item.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.DropItemAction">
            <summary>
            Action to drop an item from the inventory to the floor.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.DropItemAction.DropItem(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Byte,System.Byte)">
            <summary>
            Drops the item.
            </summary>
            <param name="player">The player.</param>
            <param name="slot">The slot.</param>
            <param name="x">The x coordinate of the point where the item should be dropped.</param>
            <param name="y">The y coordinate of the point where the item should be dropped.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemRepairAction">
            <summary>
            Action to repair an item from the inventory.
            TODO: Take money for repairing... at the moment repairing is free.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemRepairAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemRepairAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemRepairAction.RepairItem(MUnique.OpenMU.GameLogic.Player,System.Byte)">
            <summary>
            Repairs the item of the specified inventory slot.
            </summary>
            <param name="player">The player.</param>
            <param name="slot">The inventory slot.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.ItemRepairAction.RepairAllItems(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Repairs all equipped items.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.MoveItemAction">
            <summary>
            Action to move an item between <see cref="T:MUnique.OpenMU.GameLogic.Storages"/> or the same storage.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.MoveItemAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.MoveItemAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.MoveItemAction.MoveItem(MUnique.OpenMU.GameLogic.Player,System.Byte,MUnique.OpenMU.GameLogic.Storages,System.Byte,MUnique.OpenMU.GameLogic.Storages)">
            <summary>
            Moves the item.
            </summary>
            <param name="player">The player.</param>
            <param name="fromSlot">From slot.</param>
            <param name="fromStorage">From storage.</param>
            <param name="toSlot">To slot.</param>
            <param name="toStorage">To storage.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.PickupItemAction">
            <summary>
            Action to pick up an item from the floor.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.PickupItemAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.PickupItemAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.PickupItemAction.PickupItem(MUnique.OpenMU.GameLogic.Player,System.UInt16)">
            <summary>
            Pickups the item.
            </summary>
            <param name="player">The player.</param>
            <param name="dropId">The drop identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.SellItemToNpcAction">
            <summary>
            Action to sell an item to a npc merchant.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.SellItemToNpcAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Items.SellItemToNpcAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Items.SellItemToNpcAction.SellItem(MUnique.OpenMU.GameLogic.Player,System.Byte)">
            <summary>
            Sells the item of the specified slot to the npc merchant.
            </summary>
            <param name="player">The player.</param>
            <param name="slot">The slot.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyKickAction">
            <summary>
            Action to kick players from the party.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyKickAction.KickPlayer(MUnique.OpenMU.GameLogic.Player,System.Byte)">
            <summary>
            Kicks the player.
            </summary>
            <param name="player">The player.</param>
            <param name="index">The index.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyListRequestAction">
            <summary>
            Action to request the party list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyListRequestAction.RequestPartyList(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Requests the party list.
            </summary>
            <param name="player">The player who is requesting the list.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyRequestAction">
            <summary>
            The party request action.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyRequestAction.HandlePartyRequest(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Handles the party request from the <paramref name="player"/> to <paramref name="toRequest"/>.
            </summary>
            <param name="player">The player.</param>
            <param name="toRequest">The player which receives the request.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyResponseAction">
            <summary>
            The party response action.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyResponseAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyResponseAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Party.PartyResponseAction.HandleResponse(MUnique.OpenMU.GameLogic.Player,System.Boolean)">
            <summary>
            Handles the response of the party request of <see cref="P:MUnique.OpenMU.GameLogic.IPartyMember.LastPartyRequester"/>.
            </summary>
            <param name="player">The player.</param>
            <param name="accepted">if set to <c>true</c> the player accepted the party request of <see cref="P:MUnique.OpenMU.GameLogic.IPartyMember.LastPartyRequester"/>.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.TargettedSkillAction">
            <summary>
            Action to perform a skill which is explicitly aimed to a target.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.TargettedSkillAction.PerformSkill(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.IAttackable,System.UInt16)">
            <summary>
            Performs the skill.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="skillId">The skill identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.AddMasterPointAction">
            <summary>
            Action to add a master skill point to learn or increase the level of a master skill.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.AddMasterPointAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.AddMasterPointAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.AddMasterPointAction.AddMasterPoint(MUnique.OpenMU.GameLogic.Player,System.UInt16)">
            <summary>
            Adds the master point.
            </summary>
            <param name="player">The player.</param>
            <param name="skillId">The skill identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.SaveKeyConfigurationAction">
            <summary>
            Action to save the players key configuration (hotkeys for skills, potions etc.).
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.SaveKeyConfigurationAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.SaveKeyConfigurationAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.SaveKeyConfigurationAction.SaveKeyConfiguration(MUnique.OpenMU.GameLogic.Player,System.Byte[])">
            <summary>
            Saves the key configuration.
            </summary>
            <param name="player">The player.</param>
            <param name="keyConfiguration">The key configuration.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.SelectCharacterAction">
            <summary>
            Action to select a character and enter the world with it.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.SelectCharacterAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.SelectCharacterAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.SelectCharacterAction.SelectCharacter(MUnique.OpenMU.GameLogic.Player,System.String)">
            <summary>
            Selects the character and enters the world.
            </summary>
            <param name="player">The player.</param>
            <param name="characterName">Name of the character.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.CreateCharacterAction">
            <summary>
            Action to create a new character in the character selection screen.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.CreateCharacterAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.CreateCharacterAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.CreateCharacterAction.CreateCharacter(MUnique.OpenMU.GameLogic.Player,System.String,System.Int32)">
            <summary>
            Tries to create a new character.
            </summary>
            <param name="player">The player.</param>
            <param name="characterName">Name of the character.</param>
            <param name="characterClassId">The character class identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.DeleteCharacterAction">
            <summary>
            Action to delete a character in the character selction screen.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.DeleteCharacterAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.DeleteCharacterAction"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.DeleteCharacterAction.DeleteCharacter(MUnique.OpenMU.GameLogic.Player,System.String,System.String)">
            <summary>
            Tries to delete the character.
            </summary>
            <param name="player">The player.</param>
            <param name="characterName">Name of the character.</param>
            <param name="securityCode">The security code.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.FocusCharacterAction">
            <summary>
            Action to focus a character in the character selection screen.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.FocusCharacterAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.FocusCharacterAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.FocusCharacterAction.FocusCharacter(MUnique.OpenMU.GameLogic.Player,System.String)">
            <summary>
            Focuses the character.
            </summary>
            <param name="player">The player.</param>
            <param name="characterName">Name of the character.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.IncreaseStatsAction">
            <summary>
            Action to increase stat attributes.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.IncreaseStatsAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.IncreaseStatsAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.IncreaseStatsAction.IncreaseStats(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <summary>
            Increases the specified stat attribute by one point, if enough points are available.
            </summary>
            <param name="player">The player.</param>
            <param name="statAttributeDefinition">The stat attribute definition.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.RequestCharacterListAction">
            <summary>
            Action to request the character list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.RequestCharacterListAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Character.RequestCharacterListAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Character.RequestCharacterListAction.RequestCharacterList(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Requests the character list and advances the player state to <see cref="P:MUnique.OpenMU.GameLogic.PlayerState.CharacterSelection"/>.
            </summary>
            <param name="player">The player who requests the character list.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillAttackAction">
            <summary>
            Action to attack with a skill which inflicts damage to an area of the current map of the player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillAttackAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillAttackAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillAttackAction.Attack(MUnique.OpenMU.GameLogic.Player,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte)">
            <summary>
            Performs the skill by the player at the specified area. Additionally to the target area, a target object can be specified.
            </summary>
            <param name="player">The player.</param>
            <param name="extraTargetId">The extra target identifier.</param>
            <param name="skillId">The skill identifier.</param>
            <param name="targetAreaCenterX">The x coordinate of the center of the target area.</param>
            <param name="targetAreaCenterY">The y coordinate of the center of the target area.</param>
            <param name="rotation">The rotation in which the player is looking. It's not really relevant for the hitted objects yet, but for some directed skills in the future it might be.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillHitAction">
            <summary>
            Action to hit targets with an area skill, which requires explicit hits <seealso cref="F:MUnique.OpenMU.DataModel.Configuration.SkillType.AreaSkillExplicitHits"/>.
            TODO: It's usually required to perform a <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillAttackAction"/> before, so this check has to be implemented.
                  Each animation and hit is usually referenced due a counter value in the packets.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillHitAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillHitAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.AreaSkillHitAction.AttackTarget(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Entities.SkillEntry)">
            <summary>
            Attacks the target by the player with the specified skill.
            </summary>
            <param name="player">The player who is performing the skill.</param>
            <param name="target">The target.</param>
            <param name="skill">The skill.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ChatMessageAction">
            <summary>
            Action to send chat messages.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ChatMessageAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.ChatMessageAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.ChatMessageAction.ChatMessage(MUnique.OpenMU.GameLogic.Player,System.String,System.String,System.Boolean)">
            <summary>
            Sends a chat message from the player to other players.
            </summary>
            <param name="sender">The sender.</param>
            <param name="playerName">Name of the <paramref name="sender"/>, except for <see cref="F:MUnique.OpenMU.GameLogic.Views.ChatMessageType.Whisper"/>, then its the receiver name.</param>
            <param name="message">The message which should be sent.</param>
            <param name="whisper">If set to <c>true</c> the message is whispered to the player with the <paramref name="playerName"/>; Otherwise, it's not a whisper.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.ChatMessageAction.ReverseComparer">
            <summary>
            We have to implement a reverse comparer, so that the strings which are longer, come first.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.CloseNpcAction">
            <summary>
            Action to close a npc dialog.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.CloseNpcAction.CloseNpcDialog(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Closes the Monster dialog.
            </summary>
            <param name="player">The player who wants to close the dialog.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildCreateAction">
            <summary>
            Action to create a guild.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildCreateAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildCreateAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildCreateAction.CreateGuild(MUnique.OpenMU.GameLogic.Player,System.String,System.Byte[])">
            <summary>
            Creates the guild.
            </summary>
            <param name="creator">The creator.</param>
            <param name="guildName">Name of the guild.</param>
            <param name="guildEmblem">The guild emblem.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildInfoRequestAction">
            <summary>
            Action to request the information (name, symbol) of a guild.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildInfoRequestAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildInfoRequestAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildInfoRequestAction.RequestGuildInfo(MUnique.OpenMU.GameLogic.Player,System.UInt32)">
            <summary>
            Requests the guild information.
            </summary>
            <param name="player">The player.</param>
            <param name="guildId">The guild identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildKickPlayerAction">
            <summary>
            Action to kick a player out of a guild.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildKickPlayerAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildKickPlayerAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildKickPlayerAction.KickPlayer(MUnique.OpenMU.GameLogic.Player,System.String,System.String)">
            <summary>
            Kicks the player out of the guild.
            </summary>
            <param name="guildMaster">The guild master.</param>
            <param name="nickname">The nickname.</param>
            <param name="securityCode">The security code.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildListRequestAction">
            <summary>
            Action to request the guild list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildListRequestAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildListRequestAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildListRequestAction.RequestGuildList(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Requests the guild list of the guild the player is currently part of.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction">
            <summary>
            Action to answer the dialog of the guild master npc.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction"/> class.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction.Answer">
            <summary>
            Type of the answer.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction.Answer.Cancel">
            <summary>
            Cancels the guild master npc dialog.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction.Answer.ShowDialog">
            <summary>
            The guild master npc dialog should be shown.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction.ProcessAnswer(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildMasterAnswerAction.Answer)">
            <summary>
            Processes the answer.
            </summary>
            <param name="player">The player.</param>
            <param name="answer">The answer.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAction">
            <summary>
            Action to request guild membership from a guild master player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAction.RequestGuild(MUnique.OpenMU.GameLogic.Player,System.UInt16)">
            <summary>
            Requests the guild from the guild master player with the specified id.
            </summary>
            <param name="player">The player.</param>
            <param name="guildMasterId">The guild master identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAnswerAction">
            <summary>
            Action for a guild master player to answer the guild membership request.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAnswerAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAnswerAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Guild.GuildRequestAnswerAction.AnswerRequest(MUnique.OpenMU.GameLogic.Player,System.Boolean)">
            <summary>
            Answers the request.
            </summary>
            <param name="player">The player.</param>
            <param name="accept">If set to <c>true</c>, the membership has been accepted. Otherwise, not.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.HitAction">
            <summary>
            Action to hit targets without a skill with pure melee damage.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.HitAction.Hit(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.IAttackable,System.Byte,System.Byte)">
            <summary>
            Hits the specified target by the specified player.
            </summary>
            <param name="player">The player.</param>
            <param name="target">The target.</param>
            <param name="attackAnimation">The attack animation.</param>
            <param name="lookingDirection">The looking direction.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.LoginAction">
            <summary>
            Action to log in a player to the game.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.LoginAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.LoginAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.LoginAction.Login(MUnique.OpenMU.GameLogic.Player,System.String,System.String)">
            <summary>
            Logins the specified player.
            </summary>
            <param name="player">The player.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.LogoutAction">
            <summary>
            Action to log the player out of the game.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.LogoutAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.LogoutAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.LogoutAction.Logout(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.Views.LogoutType)">
            <summary>
            Logs out the specified player.
            </summary>
            <param name="player">The player.</param>
            <param name="logoutType">Type of the logout.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddFriendAction">
            <summary>
            Action to add a friend to the friendlist.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddFriendAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddFriendAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddFriendAction.AddFriend(MUnique.OpenMU.GameLogic.Player,System.String)">
            <summary>
            Adds the friend to the friendlist.
            </summary>
            <param name="player">The player.</param>
            <param name="friendName">Name of the friend.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddResponseAction">
            <summary>
            Action to respond to a friend request.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddResponseAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddResponseAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.AddResponseAction.ProceedReponse(MUnique.OpenMU.GameLogic.Player,System.String,System.Boolean)">
            <summary>
            Proceeds the reponse.
            </summary>
            <param name="player">The player.</param>
            <param name="requesterName">Name of the requester.</param>
            <param name="accepted">if set to <c>true</c> the request has been accepted.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChangeOnlineStateAction">
            <summary>
            Action to change the online state for the messenger.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChangeOnlineStateAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChangeOnlineStateAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChangeOnlineStateAction.SetOnlineState(MUnique.OpenMU.GameLogic.Player,System.Boolean)">
            <summary>
            Sets the online state.
            </summary>
            <param name="player">The player.</param>
            <param name="online">If set to <c>true</c> the player is visible as online with its server id to his friends. Otherwise, not.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChatRequestAction">
            <summary>
            Action to request a chat with a friend with the messenger.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChatRequestAction.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChatRequestAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChatRequestAction.RequestChat(MUnique.OpenMU.GameLogic.Player,System.String)">
            <summary>
            Requests the chat.
            </summary>
            <param name="player">The player who requests the chat.</param>
            <param name="friendName">Name of the friend, with which the player wants to chat.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.ChatRequestAction.InviteFriendToChat(MUnique.OpenMU.GameLogic.Player,System.String,System.UInt16,System.UInt32)">
            <summary>
            Invites the friend to an existing chat room.
            </summary>
            <param name="player">The player.</param>
            <param name="friendName">Name of the friend.</param>
            <param name="roomId">The room identifier.</param>
            <param name="requestId">The request identifier.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.DeleteFriendAction">
            <summary>
            Action to delete a friend from the friendlist.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.DeleteFriendAction.#ctor(MUnique.OpenMU.Interfaces.IFriendServer)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.DeleteFriendAction"/> class.
            </summary>
            <param name="friendServer">The friend server.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.DeleteFriendAction.DeleteFriend(MUnique.OpenMU.GameLogic.Player,System.String)">
            <summary>
            Deletes the friend.
            </summary>
            <param name="player">The player who wants to delete the friend from his friendlist.</param>
            <param name="friendName">Name of the friend which should get deleted from the friendlist.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterDeleteAction">
            <summary>
            Action to delete a letter.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterDeleteAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterDeleteAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterDeleteAction.DeleteLetter(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.Interfaces.LetterHeader)">
            <summary>
            Deletes the letter.
            </summary>
            <param name="player">The player.</param>
            <param name="letter">The letter.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterReadRequestAction">
            <summary>
            Action to read a letter.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterReadRequestAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterReadRequestAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterReadRequestAction.ReadRequest(MUnique.OpenMU.GameLogic.Player,System.UInt16)">
            <summary>
            Requests the letter which should be shown to the player.
            </summary>
            <param name="player">The player.</param>
            <param name="letterIndex">Index of the letter.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterSendAction">
            <summary>
            Action to send a letter to another player.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterSendAction.LetterSendCost">
            <summary>
            The price of sending a letter. TODO: Letter price should be configurable.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterSendAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext,MUnique.OpenMU.Interfaces.IFriendServer)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterSendAction"/> class.
            </summary>
            <param name="gameContext">The game context.</param>
            <param name="friendServer">The friend server.</param>
            <exception cref="T:System.ArgumentNullException">appearanceSerializer</exception>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Messenger.LetterSendAction.SendLetter(MUnique.OpenMU.GameLogic.Player,System.String,System.String,System.String,System.Byte,System.Byte,System.UInt32)">
            <summary>
            Sends the letter.
            </summary>
            <param name="player">The player.</param>
            <param name="receiver">The receiver.</param>
            <param name="message">The message.</param>
            <param name="title">The title.</param>
            <param name="rotation">The rotation.</param>
            <param name="animation">The animation.</param>
            <param name="letterId">The client side letter id.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.BuyRequestAction">
            <summary>
            Action to buy an item from another player shop.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.BuyRequestAction.BuyItem(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.Player,System.Byte)">
            <summary>
            Buys the item from another player shop.
            </summary>
            <param name="player">The player.</param>
            <param name="requestedPlayer">The requested player.</param>
            <param name="slot">The slot.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.CloseStoreAction">
            <summary>
            Action to close the own player store.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.CloseStoreAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.CloseStoreAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.CloseStoreAction.CloseStore(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Closes the store of the player.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.OpenStoreAction">
            <summary>
            Action to open a player store.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.OpenStoreAction.OpenStore(MUnique.OpenMU.GameLogic.Player,System.String)">
            <summary>
            Opens the player store.
            </summary>
            <param name="player">The player.</param>
            <param name="storeName">Name of the store.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.SetItemPriceAction">
            <summary>
            Action to set the price of an item of the player store.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.SetItemPriceAction.SetPrice(MUnique.OpenMU.GameLogic.Player,System.Byte,System.Int32)">
            <summary>
            Sets the price of an item.
            </summary>
            <param name="player">The player.</param>
            <param name="slot">The slot of the item in the store (0 to 31).</param>
            <param name="price">The price.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.StoreItemListRequestAction">
            <summary>
            Action to request the item list of a player store.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.PlayerStore.StoreItemListRequestAction.RequestStoreItemList(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Requests the store item list.
            </summary>
            <param name="player">The player.</param>
            <param name="requestedPlayer">The requested player.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.TalkNpcAction">
            <summary>
            Action to talk to a npc.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.TalkNpcAction.TalkToNpc(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.GameLogic.NPC.NonPlayerCharacter)">
            <summary>
            Talks to the specified Monster.
            </summary>
            <param name="player">The player.</param>
            <param name="npc">The Monster.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.BaseTradeAction">
            <summary>
            Action to cancel a trade.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.BaseTradeAction.CancelTrade(MUnique.OpenMU.GameLogic.ITrader)">
            <summary>
            Cancels the trade.
            </summary>
            <param name="trader">The trader.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.BaseTradeAction.ResetTradeState(MUnique.OpenMU.GameLogic.ITrader)">
            <summary>
            Resets the trade.
            </summary>
            <param name="trader">The trader.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.BaseTradeAction.SendMessage(MUnique.OpenMU.GameLogic.ITrader,System.String)">
            <summary>
            Sends the message to the trader.
            </summary>
            <param name="trader">The trader.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeAcceptAction">
            <summary>
            Action to accept the trade.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeAcceptAction.HandleTradeAccept(MUnique.OpenMU.GameLogic.ITrader,System.Boolean)">
            <summary>
            Handles the trade request answer.
            </summary>
            <param name="tradeAccepter">The trader which answers the trade request.</param>
            <param name="accept">Indicates if the trader accepted the trade request.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeAcceptAction.OpenTrade(MUnique.OpenMU.GameLogic.ITrader)">
            <summary>
            Opens the trade.
            </summary>
            <param name="trader">Trader for which the trade should be opened.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeButtonAction">
            <summary>
            Action to change the trade button state.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeButtonAction.#ctor(MUnique.OpenMU.GameLogic.IGameContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeButtonAction" /> class.
            </summary>
            <param name="gameContext">The game context.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeButtonAction.TradeButtonChanged(MUnique.OpenMU.GameLogic.ITrader,MUnique.OpenMU.GameLogic.Views.TradeButtonState)">
            <summary>
            Tries to change the trade button change to the new <paramref name="tradeButtonState"/>.
            </summary>
            <param name="trader">The trader.</param>
            <param name="tradeButtonState">The new state of the trade button.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeCancelAction">
            <summary>
            Action to cancel the trade.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeCancelAction.CancelTrade(MUnique.OpenMU.GameLogic.ITrader)">
            <summary>
            Cancels the trade.
            </summary>
            <param name="trader">The trader.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeMoneyAction">
            <summary>
            Action to set the traded money.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeMoneyAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeMoneyAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeMoneyAction.TradeMoney(MUnique.OpenMU.GameLogic.Player,System.UInt32)">
            <summary>
            Sets the money which should be traded to the other player.
            </summary>
            <param name="player">The player.</param>
            <param name="moneyAmount">The money amount.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeRequestAction">
            <summary>
            Action to request a trade with another player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeRequestAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeRequestAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.Trade.TradeRequestAction.RequestTrade(MUnique.OpenMU.GameLogic.ITrader,MUnique.OpenMU.GameLogic.ITrader)">
            <summary>
            Requests the trade from the other player.
            </summary>
            <param name="player">The player who requests the trade.</param>
            <param name="partner">The partner which will be requested.</param>
            <returns>The success of sending the request to the <paramref name="partner"/>.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.WarpGateAction">
            <summary>
            Action to warp to another place through a gate.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.WarpGateAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.PlayerActions.WarpGateAction"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.WarpGateAction.EnterGate(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.DataModel.Configuration.EnterGate)">
            <summary>
            Enters the gate.
            </summary>
            <param name="player">The player.</param>
            <param name="enterGate">The enter gate.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerActions.WarpAction">
            <summary>
            Action to warp to another place.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.PlayerActions.WarpAction.WarpTo(MUnique.OpenMU.GameLogic.Player,MUnique.OpenMU.DataModel.Configuration.WarpInfo)">
            <summary>
            Warps the player.
            </summary>
            <param name="player">The player.</param>
            <param name="warpInfo">The warp information.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ShopStorage">
            <summary>
            The storage of the personal store of a player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ShopStorage.#ctor(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.ShopStorage"/> class.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ShopStorage.StoreLock">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ShopStorage.StoreName">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.ShopStorage.StoreOpen">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ShopStorage.AddItem(System.Byte,MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ShopStorage.SetItemSlot(MUnique.OpenMU.DataModel.Entities.Item,System.Byte)">
            <inheritdoc />
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1">
            <summary>
            An extremely fast dictionary with <see cref="T:System.UInt16"/> as key. It is using an array with a fixed size internally.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1"/> class.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.SyncRoot">
            <summary>
            Gets or sets the synchronize root.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Keys">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Values">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Count">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Item(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Add(System.UInt16,`0)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.ContainsKey(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Remove(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.TryGetValue(System.UInt16,`0@)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Add(System.Collections.Generic.KeyValuePair{System.UInt16,`0})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Contains(System.Collections.Generic.KeyValuePair{System.UInt16,`0})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.CopyTo(System.Collections.Generic.KeyValuePair{System.UInt16,`0}[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.Remove(System.Collections.Generic.KeyValuePair{System.UInt16,`0})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.DataStructures.ShortDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ShortExtensions">
            <summary>
            Extension methods for <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ShortExtensions.ToUnsigned(System.Int16)">
            <summary>
            Converts the signed short to an unsigned short.
            </summary>
            <param name="value">The signed value.</param>
            <returns>The unsigned value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ShortExtensions.ToSigned(System.UInt16)">
            <summary>
            Converts the signed short to an unsigned short.
            </summary>
            <param name="value">The signed value.</param>
            <returns>The unsigned value.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.TemporaryItem">
            <summary>
            A temporary item which is not persistent (yet).
            </summary>
            <seealso cref="T:MUnique.OpenMU.DataModel.Entities.Item" />
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.TemporaryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.TemporaryItem"/> class.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.TemporaryItem.MakePersistent(MUnique.OpenMU.Persistence.IContext)">
            <summary>
            Makes this item persistent.
            </summary>
            <param name="persistenceContext">The persistence context where the item should be added.</param>
            <returns>The persistent item.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IAppearanceSerializer">
            <summary>
            Serializer of <see cref="T:MUnique.OpenMU.DataModel.Entities.IAppearanceData"/> objects.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IAppearanceSerializer.GetAppearanceData(MUnique.OpenMU.DataModel.Entities.IAppearanceData)">
            <summary>
            Gets the serialized appearance data.
            </summary>
            <param name="appearance">The appearance.</param>
            <returns>The serialized appearance data.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IItemPowerUpFactory">
            <summary>
            A Factory for power ups which are provided by equipped items.
            Each power up has to be created indiviually for a specific player, because some depend on the attributes of the player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IItemPowerUpFactory.GetPowerUps(MUnique.OpenMU.DataModel.Entities.Item,MUnique.OpenMU.AttributeSystem.AttributeSystem)">
            <summary>
            Gets the power ups of an individual item.
            </summary>
            <param name="item">The item.</param>
            <param name="attributeSystem">The attribute system of the player who equipped the item.</param>
            <returns>The created powerups.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IItemPowerUpFactory.GetSetPowerUps(System.Collections.Generic.IEnumerable{MUnique.OpenMU.DataModel.Entities.Item},MUnique.OpenMU.AttributeSystem.AttributeSystem)">
            <summary>
            Gets the set power ups, which are created for existing <see cref="T:MUnique.OpenMU.DataModel.Configuration.Items.ItemSetGroup"/>s in the equipped items.
            </summary>
            <param name="equippedItems">The equipped items.</param>
            <param name="attributeSystem">The attribute system of the player who equipped the items.</param>
            <returns>The created set power ups.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ItemPowerUpFactory">
            <summary>
            The implementation of the item power up factory.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemPowerUpFactory.GetPowerUps(MUnique.OpenMU.DataModel.Entities.Item,MUnique.OpenMU.AttributeSystem.AttributeSystem)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemPowerUpFactory.GetSetPowerUps(System.Collections.Generic.IEnumerable{MUnique.OpenMU.DataModel.Entities.Item},MUnique.OpenMU.AttributeSystem.AttributeSystem)">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.PlayerState">
            <summary>
            The states of a player, used by the <see cref="P:MUnique.OpenMU.GameLogic.ITrader.PlayerState"/>.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.Finished">
            <summary>
            Gets the finished state. When this state is active, the player session was saved and the player object can be safely removed from the game.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.Disconnected">
            <summary>
            Gets the disconnected state. When this state is active, the player disconnected from the game, but his session is not saved yet.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.EnteredWorld">
            <summary>
            Gets the entered world state. When this state is active, the player entered the world with one of his characters.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.Dead">
            <summary>
            Gets the dead state. When this state is active, the player has been killed with one of his characters.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.CharacterSelection">
            <summary>
            Gets the character selection state. When this state is active, the character selection screen is shown.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.Authenticated">
            <summary>
            Gets the authenticated state. When this state is active, the player has been successfully authenticated.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.LoginScreen">
            <summary>
            Gets the login screen state. When this state is active, the login screen is shown to the player.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.Initial">
            <summary>
            Gets the initial state.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.ChangingMap">
            <summary>
            Gets the changing map state.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.TradeRequested">
            <summary>
            Gets the trade requested state. When this state is active, a player got requested by another player to open a trade.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.TradeOpened">
            <summary>
            Gets the trade opened state. When this state is active, the player has a trade going on.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.TradeButtonPressed">
            <summary>
            Gets the trade button pressed state. When this state is active, the player pressed its trade button to close his trade.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.NpcDialogOpened">
            <summary>
            Gets the Monster dialog opened state. When this state is active, the player has opened a Monster dialog.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.PartyRequest">
            <summary>
            Gets the party request state. When this state is active, the player has requested for party.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.PlayerState.GuildRequest">
            <summary>
            Gets the guild request state. When this state is active, the player has requested for guild.
            TODO: set this state
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.State">
            <summary>
            A state of a state machine.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.State.Id">
            <summary>
            Gets or sets the unique id of a state.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.State.Name">
            <summary>
            Gets or sets the name of the state.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.State.PossibleTransitions">
            <summary>
            Gets or sets the possible transitions to which this state can advance.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.State.op_Equality(MUnique.OpenMU.GameLogic.State,MUnique.OpenMU.GameLogic.State)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.State.op_Inequality(MUnique.OpenMU.GameLogic.State,MUnique.OpenMU.GameLogic.State)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.State.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.State.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.State.ToString">
            <summary>
            Returns the name of the state.
            </summary>
            <returns>The name of the state.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.StateMachine">
            <summary>
            A state machine.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.StateMachine.lockObject">
            <summary>
            The lock object for state transitions.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.StateMachine.cachedCancelEventArgs">
            <summary>
            A cancel event args object, which is getting reused.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.StateMachine.#ctor(MUnique.OpenMU.GameLogic.State)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.StateMachine"/> class.
            </summary>
            <param name="initialState">The initial state.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.StateMachine.StateChangeCancelEventHandler">
            <summary>
            The state change cancel event handler.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.StateMachine.StateChanges">
            <summary>
            Event that fires just before the state changes.
            </summary>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.StateMachine.StateChanged">
            <summary>
            Event that fires after the state have changed.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.StateMachine.CurrentState">
            <summary>
            Gets the current state.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.StateMachine.Finished">
            <summary>
            Gets a value indicating whether the state machine is in a finished state, that means that no further state changes are possible.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.StateMachine.TryAdvanceTo(MUnique.OpenMU.GameLogic.State)">
            <summary>
            Tries to advance the state to <paramref name="nextState"/>.
            </summary>
            <param name="nextState">The state to advance to.</param>
            <returns>The success.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.StateMachine.TryBeginAdvanceTo(MUnique.OpenMU.GameLogic.State)">
            <summary>
            Tries to start a "transaction" to advance the state to <paramref name="nextState"/>.
            </summary>
            <param name="nextState">The state to advance to.</param>
            <returns>The state change context. On disposal of this object, the state change is getting completed.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.StateMachine.OnStateChanged">
            <summary>
            Calls the StateChanged-Event.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.StateMachine.OnStateChanging(MUnique.OpenMU.GameLogic.State)">
            <summary>
            Calls the StateChanges-Event.
            </summary>
            <param name="nextState">The next state.</param>
            <returns><c>True</c>, if all event handlers did not set <see cref="T:System.ComponentModel.CancelEventArgs"/> to <c>true</c>; Otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.StateMachine.StateChangeContext">
            <summary>
            The state change context for more complex state changes.
            On disposal of this object, the state change is getting completed.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.StateMachine.StateChangeContext.lockObject">
            <summary>
            The lock object of the state machine.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.StateMachine.StateChangeContext.finishAction">
            <summary>
            The action which gets executed when the state change is completed.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.StateMachine.StateChangeContext.#ctor(System.Object,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.StateMachine.StateChangeContext"/> class.
            </summary>
            <param name="lockObject">The lock object of the state machine.</param>
            <param name="finishAction">The action which should get executed when the state change is completed.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.StateMachine.StateChangeContext.Allowed">
            <summary>
            Gets a value indicating whether a state change is allowed.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.StateMachine.StateChangeContext.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.StateMachine.StateChangeEventArgs">
            <summary>
            The state change event args, including the next state.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.StateMachine.StateChangeEventArgs.NextState">
            <summary>
            Gets or sets the next state.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Storage">
            <summary>
            This class wraps the access to the IItemStorage of an character.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.#ctor(System.Int32,System.Int32,System.Int32,MUnique.OpenMU.DataModel.Entities.ItemStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Storage"/> class.
            </summary>
            <param name="firstEquippableSlot">The first equippable slot.</param>
            <param name="lastEquippableSlot">The last equippable slot.</param>
            <param name="numberOfSlots">The number of slots.</param>
            <param name="itemStorage">The item storage.</param>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.Storage.EquippedItemsChanged">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Storage.ItemStorage">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Storage.Items">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Storage.EquippedItems">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Storage.FreeSlots">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Storage.Extensions">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.AddItem(System.Byte,MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.AddItem(MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.CheckInvSpace(MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.TryTakeAll(MUnique.OpenMU.GameLogic.IStorage)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.GetItem(System.Byte)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.RemoveItem(MUnique.OpenMU.DataModel.Entities.Item)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.Clear">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Storage.SetItemSlot(MUnique.OpenMU.DataModel.Entities.Item,System.Byte)">
            <summary>
            Sets the item slot at the item. Can be overwritten if there is some kind of slot offset.
            </summary>
            <param name="item">The item.</param>
            <param name="slot">The slot.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.GameContext">
            <summary>
            The game context which holds all data of the game together.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameContext.#ctor(MUnique.OpenMU.DataModel.Configuration.GameConfiguration,MUnique.OpenMU.Persistence.IPersistenceContextProvider,MUnique.OpenMU.Interfaces.IGameStateObserver,MUnique.OpenMU.GameLogic.IMapInitializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.GameContext" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="persistenceContextProvider">The persistence context provider.</param>
            <param name="stateObserver">The state observer.</param>
            <param name="mapInitializer">The map initializer.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameContext.Maps">
            <summary>
            Gets the initialized maps which are hosted on this context.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameContext.Configuration">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameContext.ItemPowerUpFactory">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameContext.PersistenceContextProvider">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameContext.PlayerList">
            <summary>
            Gets the player list.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameContext.PlayersByCharacterName">
            <summary>
            Gets the players by character name dictionary.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameContext.GetMap(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameContext.AddPlayer(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Adds the player to the game.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameContext.RemovePlayer(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Removes the player from the game.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameContext.GetPlayerByCharacterName(System.String)">
            <summary>
            Gets the player by the character name.
            </summary>
            <param name="name">The character name.</param>
            <returns>The player by character name.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameContext.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameContext.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="managed"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.GameMap">
            <summary>
            The game map which contains instances of players, npcs, drops, and more.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.#ctor(MUnique.OpenMU.DataModel.Configuration.GameMapDefinition,System.Int32,System.Byte,MUnique.OpenMU.Interfaces.IMapStateObserver)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.GameMap" /> class.
            </summary>
            <param name="mapDefinition">The map definition.</param>
            <param name="itemDropDuration">Duration of the item drop.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <param name="stateObserver">The map state observer.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameMap.MapId">
            <summary>
            Gets the map identifier.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameMap.Terrain">
            <summary>
            Gets the terrain of the map.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameMap.ItemDropDuration">
            <summary>
            Gets the time in seconds of how long drops are laying on the ground until they are disappearing.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.GameMap.Definition">
            <summary>
            Gets the definition of the map.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.GetObject(System.UInt16)">
            <summary>
            Gets the object with the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The object with the specified identifier.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.GetAttackablesInRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the attackables in range of the specified coordinate.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="range">The range.</param>
            <returns>The attackables in range of the specified coordinate.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.GetDrop(System.UInt16)">
            <summary>
            Gets the drop by id.
            </summary>
            <param name="dropId">The drop identifier.</param>
            <returns>The dropped item.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.Remove(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Removes the locateable from the map.
            </summary>
            <param name="locateable">The locateable.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.Add(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Adds the locateable to the map.
            </summary>
            <param name="locateable">The locateable object.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.Move(MUnique.OpenMU.GameLogic.ILocateable,System.Byte,System.Byte,System.Object,MUnique.OpenMU.GameLogic.Views.MoveType)">
            <summary>
            Moves the locateable on the map.
            </summary>
            <param name="locateable">The monster.</param>
            <param name="newX">The new x coordinate.</param>
            <param name="newY">The new y coordinate.</param>
            <param name="moveLock">The move lock.</param>
            <param name="moveType">Type of the move.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GameMap.Respawn(MUnique.OpenMU.GameLogic.ILocateable)">
            <summary>
            Respawns the specified locateable.
            </summary>
            <param name="locateable">The locateable.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.GuildCache">
            <summary>
            A cache for guild data.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GuildCache.#ctor(MUnique.OpenMU.GameLogic.IGameServerContext,MUnique.OpenMU.GameLogic.GuildCache.IGuildInfoSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.GuildCache"/> class.
            </summary>
            <param name="gameServer">The game server.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.GuildCache.IGuildInfoSerializer">
            <summary>
            Declares an interface for a serializer of guilds.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GuildCache.IGuildInfoSerializer.Serialize(MUnique.OpenMU.Interfaces.Guild,System.UInt32)">
            <summary>
            Serializes the specified guild.
            </summary>
            <param name="guild">The guild.</param>
            <param name="guildId">The guild identifier.</param>
            <returns>
            The serialized guild data.
            </returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GuildCache.Invalidate(System.UInt32)">
            <summary>
            Invalidates the cached data of the guild with the specified id.
            </summary>
            <param name="guildId">The id of the guild which data should get invalidated.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.GuildCache.GetGuildData(System.UInt32)">
            <summary>
            Returns the Guild Info Data of a Guild. It will either
            take the data out of the cache, or get it from the database.
            </summary>
            <param name="guildId">The id of the guild.</param>
            <returns>The data of the guild.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IGameServerContext">
            <summary>
            The context of a game server.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameServerContext.Id">
            <summary>
            Gets the identifier of the server.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameServerContext.GuildServer">
            <summary>
            Gets the guild server.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameServerContext.LoginServer">
            <summary>
            Gets the login server.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameServerContext.FriendServer">
            <summary>
            Gets the friend server.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameServerContext.GuildCache">
            <summary>
            Gets the guild cache.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameServerContext.ServerConfiguration">
            <summary>
            Gets the server configuration.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Storages">
            <summary>
            The types of item storages.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Storages.Inventory">
            <summary>
            The inventory storage.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Storages.Trade">
            <summary>
            The trade storage.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Storages.Vault">
            <summary>
            The vault storage.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Storages.ChaosMachine">
            <summary>
            The chaos machine storage.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.Storages.PersonalStore">
            <summary>
            The personal store storage.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IStorage">
            <summary>
            An object which handles the storage with its logic.
            </summary>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.IStorage.EquippedItemsChanged">
            <summary>
            Occurs when the equipped items changed.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IStorage.ItemStorage">
            <summary>
            Gets the underlying item storage.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IStorage.Items">
            <summary>
            Gets an enumeration of all items.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IStorage.EquippedItems">
            <summary>
            Gets all items which are in the wearable slots.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IStorage.FreeSlots">
            <summary>
            Gets an enumeration of all free item slot indexes.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IStorage.Extensions">
            <summary>
            Gets the extensions of an inventory.
            TODO: Use or remove it?
                  -> Use it. Current Storage implementation has an error... e.g. you could place a 2x2 item on the last row of the regular inventory.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IStorage.AddItem(System.Byte,MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Adds the item to the storage.
            </summary>
            <param name="slot">The slot where the items should be put in.</param>
            <param name="item">The item.</param>
            <returns>True, if successful.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IStorage.AddItem(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Adds the item to the storage.
            </summary>
            <param name="item">The item.</param>
            <returns>True, if successful.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IStorage.CheckInvSpace(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Returns the index of a slot in which the item would fit.
            </summary>
            <param name="item">The item.</param>
            <returns>The index of a slot in which the item would fit.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IStorage.TryTakeAll(MUnique.OpenMU.GameLogic.IStorage)">
            <summary>
            Checks if the items of this Storage will fit into another storage, and adds them if possible.
            </summary>
            <param name="anotherStorage">The other storage.</param>
            <returns>If it was successful.</returns>
            <remarks>Helpful for the trade function where all items of the trade partner has to be added to the own inventory.</remarks>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IStorage.GetItem(System.Byte)">
            <summary>
            Gets the item from the specified slot.
            </summary>
            <param name="inventorySlot">The inventory slot.</param>
            <returns>The item from the specified slot.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IStorage.RemoveItem(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Removes the item from this storage.
            </summary>
            <param name="item">The item which should be removed.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IStorage.Clear">
            <summary>
            Clears this storage from all of its items.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IShopStorage">
            <summary>
            The interface for a player shop storage. A shop can be opened by a player, and other players can buy the items of this shop.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IShopStorage.StoreOpen">
            <summary>
            Gets or sets a value indicating whether the store is opened for other players.
            </summary>
            <value>
              <c>true</c> if the store is opened for other players; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IShopStorage.StoreName">
            <summary>
            Gets or sets the name of the store.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IShopStorage.StoreLock">
            <summary>
            Gets the store lock.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.MagicEffect">
            <summary>
            Skill Effect, used by Skill Effect List in each
            Player Instance.
            Additional needed information should be get through the
            global list, to save memory.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffect.#ctor(MUnique.OpenMU.AttributeSystem.IElement,MUnique.OpenMU.DataModel.Configuration.MagicEffectDefinition,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.MagicEffect"/> class.
            </summary>
            <param name="powerUp">The power up.</param>
            <param name="definition">The definition.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.MagicEffect.EffectTimeOut">
            <summary>
            Occurs when the effect has been timed out.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffect.Id">
            <summary>
            Gets the identifier of the effect.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffect.Duration">
            <summary>
            Gets or sets the duration of the effect.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffect.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffect.PowerUpElements">
            <summary>
            Gets or sets the power up elements.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffect.Definition">
            <summary>
            Gets the definition.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffect.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffect.ResetTimer">
            <summary>
            Resets the timer.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.MagicEffect.ElementWithTarget">
            <summary>
            Holds the element containing the boost value with its target attribute.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffect.ElementWithTarget.#ctor(MUnique.OpenMU.AttributeSystem.IElement,MUnique.OpenMU.AttributeSystem.AttributeDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.MagicEffect.ElementWithTarget"/> class.
            </summary>
            <param name="element">The element.</param>
            <param name="target">The target attribute.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffect.ElementWithTarget.Element">
            <summary>
            Gets the element containing the boost value.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffect.ElementWithTarget.Target">
            <summary>
            Gets the target attribute.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IGameContext">
            <summary>
            The context of the game.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameContext.PersistenceContextProvider">
            <summary>
            Gets the repository manager. Used to retrieve data, e.g. from a database.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameContext.ItemPowerUpFactory">
            <summary>
            Gets the item power up factory.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameContext.Configuration">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IGameContext.PlayerList">
            <summary>
            Gets the players of the game in a list.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IGameContext.GetMap(System.UInt16)">
            <summary>
            Gets the maps which is meant to be hosted by the game.
            </summary>
            <param name="mapId">The map identifier.</param>
            <returns>The hosted GameMap instance.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IGameContext.GetPlayerByCharacterName(System.String)">
            <summary>
            Gets the player object by character name.
            </summary>
            <param name="name">The character name.</param>
            <returns>The player object.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IMonsterIntelligence">
            <summary>
            Interface of a monster artificial intelligence.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IMonsterIntelligence.Monster">
            <summary>
            Gets or sets the monster which this AI is controlling.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IMonsterIntelligence.RegisterHit(MUnique.OpenMU.GameLogic.IAttackable)">
            <summary>
            Registers a hit from an attacker.
            </summary>
            <param name="attacker">The attacker.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IMonsterIntelligence.Start">
            <summary>
            Starts the actions.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.IObservable">
            <summary>
            Interface for an observable object.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IObservable.Observers">
            <summary>
            Gets the observers.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.IObservable.ObserverLock">
            <summary>
            Gets the lock for <see cref="P:MUnique.OpenMU.GameLogic.IObservable.Observers"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IObservable.AddObserver(MUnique.OpenMU.GameLogic.IWorldObserver)">
            <summary>
            Adds the observer.
            </summary>
            <param name="observer">The observer.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.IObservable.RemoveObserver(MUnique.OpenMU.GameLogic.IWorldObserver)">
            <summary>
            Removes the observer.
            </summary>
            <param name="observer">The observer.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.ItemPriceCalculator">
            <summary>
            This calculator calculates the item prices.
            </summary>
            <remarks>
            At the moment it looks all pretty hard coded (like at the original server), so maybe in a future version we could
            write a more generic calculator, which can be influenced by configuration instead of hard-coded item ids.
            A nice approach would be to have a "rule" for each item definition, about how to calculate the price.
            </remarks>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemPriceCalculator.CalculateSellingPrice(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Calculates the selling price of the item, which the player gets if he is selling an item to a merchant.
            It's usually a third of the buying price.
            </summary>
            <param name="item">The item.</param>
            <returns>The selling price.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.ItemPriceCalculator.CalculateBuyingPrice(MUnique.OpenMU.DataModel.Entities.Item)">
            <summary>
            Calculates the buying price of the item, which the player has to pay if he wants to buy the item from a merchant.
            </summary>
            <param name="item">The item.</param>
            <returns>The buying price.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.MagicEffectsList">
            <summary>
            The list of magic effects of a player instance. Automatically applies the powerups of the effects to the player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffectsList.#ctor(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.MagicEffectsList"/> class.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.MagicEffectsList.ActiveEffects">
            <summary>
            Gets the active effects.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffectsList.AddEffect(MUnique.OpenMU.GameLogic.MagicEffect)">
            <summary>
            Adds the effect and applies the power ups.
            </summary>
            <param name="effect">The effect.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffectsList.GetVisibleEffects">
            <summary>
            Gets the active visible effect ids.
            </summary>
            <returns>An array of active effect ids.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffectsList.ClearAllEffects">
            <summary>
            Clears all active effects.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.MagicEffectsList.UpdateEffect(MUnique.OpenMU.GameLogic.MagicEffect)">
            <summary>
            Updates the effect.
            </summary>
            <param name="effect">The effect.</param>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Party">
            <summary>
            The party object. Contains a group of players who can chat with each other, and get informations about the health status of their party mates.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Party.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Party"/> class.
            </summary>
            <param name="maxPartySize">Maximum size of the party.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Party.PartyList">
            <summary>
            Gets the party list.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Party.MaxPartySize">
            <summary>
            Gets the maximum size of the party.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Party.PartyMaster">
            <summary>
            Gets the party master.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Party.KickPlayer(MUnique.OpenMU.GameLogic.IPartyMember,System.Byte)">
            <summary>
            Kicks the player from the party.
            Only the party master is allowed to kick other players. However, players can kick themself out of the party.
            </summary>
            <param name="sender">The sender.</param>
            <param name="index">The party list index of the member to kick.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Party.Add(MUnique.OpenMU.GameLogic.IPartyMember)">
            <summary>
            Adds the specified new party mate.
            </summary>
            <param name="newPartyMate">The new party mate.</param>
            <returns><c>True</c>, if adding was successful; Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Party.SendChatMessage(System.String,System.String)">
            <summary>
            Sends the chat message to all party members.
            </summary>
            <param name="message">The message.</param>
            <param name="senderCharacterName">The sender character name.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Party.DistributeExperienceAfterKill(MUnique.OpenMU.GameLogic.IAttackable)">
            <summary>
            Distributes the experience after kill.
            </summary>
            <param name="killedObject">The object which was killed.</param>
            <returns>The total distributed experience to all party members.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Party.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.CharacterPose">
            <summary>
            The character pose.
            TODO: Use it.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.CharacterPose.Standing">
            <summary>
            The character is standing (normal).
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.CharacterPose.Sitting">
            <summary>
            The character is sitting on an object.
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.CharacterPose.Leaning">
            <summary>
            The character is leaning towards something (wall etc).
            </summary>
        </member>
        <member name="F:MUnique.OpenMU.GameLogic.CharacterPose.Hanging">
            <summary>
            The character is hanging on something.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Player">
            <summary>
            The base implementation of a player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.#ctor(MUnique.OpenMU.GameLogic.IGameContext,MUnique.OpenMU.GameLogic.Views.IPlayerView)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Player" /> class.
            </summary>di
            <param name="gameContext">The game context.</param>
            <param name="playerView">The player view.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.Player"/> class.
            </summary>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.Player.PlayerDisconnected">
            <summary>
            Occurs when the player has or got disconnected from the game.
            </summary>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.Player.PlayerEnteredWorld">
            <summary>
            Occurs when the player entered the world with his selected character.
            </summary>
        </member>
        <member name="E:MUnique.OpenMU.GameLogic.Player.PlayerLeftWorld">
            <summary>
            Occurs when the player left the world with his selected character.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.IsWalking">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.StepDelay">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.NextDirections">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.WalkTarget">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Money">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.WorldView">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.PersistenceContext">
            <summary>
            Gets the persistence context.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.TradeView">
            <inheritdoc />
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Id">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Name">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Level">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.SelectedCharacter">
            <summary>
            Gets or sets the selected character.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Account">
            <summary>
            Gets or sets the account.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.MagicEffectList">
            <summary>
            Gets the magic effect list.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.OpenedNpc">
            <summary>
            Gets or sets the Monster of the current opened Monster dialog.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.PlayerState">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.TradingPartner">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.TradingMoney">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.CurrentMap">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Observers">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.ObserverLock">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.LastPartyRequester">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.SkillList">
            <summary>
            Gets the skill list.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.GuildStatus">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Rotation">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Party">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Alive">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.X">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Y">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.MaximumHealth">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.CurrentHealth">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.OnlineAsFriend">
            <summary>
            Gets or sets a value indicating whether this player is online as friend, and shown as online in its friends friendlists.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.PlayerView">
            <summary>
            Gets or sets the player view.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.PartyView">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Inventory">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.TemporaryStorage">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Vault">
            <summary>
            Gets or sets the vault.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.ShopStorage">
            <summary>
            Gets the shop storage.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.BackupInventory">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.AppearanceData">
            <summary>
            Gets the appearance data.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.GameContext">
            <summary>
            Gets the game context.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.ObservingBuckets">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.InfoRange">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.LastGuildRequester">
            <summary>
            Gets or sets the last guild requester.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.MUnique#OpenMU#GameLogic#IAttackable#Attributes">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.Attributes">
            <summary>
            Gets the attribute system.
            </summary>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.NewBucket">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.Player.OldBucket">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.GetAppearanceData(MUnique.OpenMU.GameLogic.IAppearanceSerializer)">
            <summary>
            Gets the appearance data of the player with the specified serializer.
            </summary>
            <param name="appearanceSerializer">The appearance serializer.</param>
            <returns>The appearance data.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.AttackBy(MUnique.OpenMU.GameLogic.IAttackable,MUnique.OpenMU.DataModel.Entities.SkillEntry)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.AfterHitTarget">
            <summary>
            Is called after the player successfully hit a target.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.ReflectDamage(MUnique.OpenMU.GameLogic.IAttackable,System.UInt32)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.AfterKilledMonster">
            <summary>
            Is called after the player killed a <see cref="T:MUnique.OpenMU.GameLogic.NPC.Monster"/>.
            Adds recovered mana and health to the players attributes.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.ResetAppearanceCache">
            <summary>
            Resets the appearance cache.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.CompliesRequirements(MUnique.OpenMU.DataModel.Configuration.Items.ItemDefinition)">
            <summary>
            Determines wether the player complies with the requirements of the specified item.
            </summary>
            <param name="item">The definition of the item.</param>
            <returns><c>True</c>, if the player complies with the requirements of the specified item; Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.TryRemoveMoney(System.Int32)">
            <summary>
            Tries to remove the money from the players inventory.
            </summary>
            <param name="value">The value which should be removed.</param>
            <returns><c>True</c>, if the players inventory had enough money to remove; Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.TryAddMoney(System.Int32)">
            <summary>
            Tries to add the money from the players inventory.
            </summary>
            <param name="value">The value which should be added.</param>
            <returns><c>True</c>, if the players inventory had space to add money; Otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.WarpTo(MUnique.OpenMU.DataModel.Configuration.ExitGate)">
            <summary>
            Moves the player to the specified gate.
            </summary>
            <param name="gate">The gate to which the player should be moved.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.ClientReadyAfterMapChange">
            <summary>
            Signals that the game client of the player is ready after a map change (data has been loaded etc).
            On this event, the player enters the game map on the server side, and interacts with the other objects.
            </summary>
            <remarks>
            this method is called after the client sent us the F3 12 packet.
            </remarks>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.AddExpAfterKill(MUnique.OpenMU.GameLogic.IAttackable)">
            <summary>
            Adds experience points after killing the target object.
            </summary>
            <param name="killedObject">The killed object.</param>
            <returns>The gained experience.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.AddExperience(System.Int32,MUnique.OpenMU.GameLogic.IIdentifiable)">
            <summary>
            Adds the experience.
            </summary>
            <param name="experience">The experience which should be added.</param>
            <param name="killedObject">The killed object which caused the experience gain.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.Move(System.Byte,System.Byte,MUnique.OpenMU.GameLogic.Views.MoveType)">
            <summary>
            Moves the player to the specified coordinate.
            </summary>
            <param name="newx">The new x coordinate.</param>
            <param name="newy">The new y coordinate.</param>
            <param name="moveType">Type of the move.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.Regenerate">
            <summary>
            Regenerates the attributes specified in <see cref="P:MUnique.OpenMU.GameLogic.Attributes.Stats.IntervalRegenerationAttributes"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.Disconnect">
            <summary>
            Disonnects the player from the game. Remote connections will be closed and data will be saved.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.AddObserver(MUnique.OpenMU.GameLogic.IWorldObserver)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.RemoveObserver(MUnique.OpenMU.GameLogic.IWorldObserver)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.LocateableAdded(System.Object,MUnique.OpenMU.GameLogic.BucketItemEventArgs{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.LocateableRemoved(System.Object,MUnique.OpenMU.GameLogic.BucketItemEventArgs{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.LocateablesOutOfScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.NewLocateablesInScope(System.Collections.Generic.IEnumerable{MUnique.OpenMU.GameLogic.ILocateable})">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.TryConsumeForSkill(MUnique.OpenMU.DataModel.Configuration.Skill)">
            <summary>
            Tries to consume the <see cref="P:MUnique.OpenMU.DataModel.Configuration.Skill.ConsumeRequirements"/> of a skill.
            </summary>
            <param name="skill">The skill which should get performed.</param>
            <returns>
                <c>True</c>, if the <see cref="P:MUnique.OpenMU.DataModel.Configuration.Skill.ConsumeRequirements"/> and <see cref="P:MUnique.OpenMU.DataModel.Configuration.Skill.Requirements"/>
                are being met, and the <see cref="P:MUnique.OpenMU.DataModel.Configuration.Skill.ConsumeRequirements"/> have been consumed; Otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.ToString">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="managed"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Player.InternalDisconnect">
            <summary>
            Is called, when <see cref="M:MUnique.OpenMU.GameLogic.Player.Disconnect"/> is called.
            </summary>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.Rand">
            <summary>
            A static class to provide random functions by encapsulating the default randomizer <see cref="T:System.Random"/>.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.GetRandomizer">
            <summary>
            Gets the default randomizer which is implementing the interface <see cref="T:MUnique.OpenMU.GameLogic.IRandomizer"/>.
            </summary>
            <returns>The default randomizer which is implementing the interface <see cref="T:MUnique.OpenMU.GameLogic.IRandomizer"/>.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextRandomBool">
            <summary>
            Returns a random boolean value.
            </summary>
            <returns>Random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextRandomBool(System.Int32)">
            <summary>
            Returns a random boolean value, with <paramref name="percent"/> percent of a chance to be true.
            </summary>
            <param name="percent">Percentage of true.</param>
            <returns>Random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextRandomBool(System.Double)">
            <summary>
            Returns a random boolean value, with <paramref name="chance"/> between 0 and 1 to be true.
            </summary>
            <param name="chance">Chance between 0 and 1 to be true.</param>
            <returns>Random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextRandomBool(System.Int32,System.Int32)">
            <summary>
            Returns a random boolean value with the chance <paramref name="chance" /> of <paramref name="basis"/>.
            </summary>
            <param name="chance">Chance to be true.</param>
            <param name="basis">Base of the chance.</param>
            <returns>Random boolean value.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextInt(System.Int32,System.Int32)">
            <summary>
            Returns a random integer between min and max.
            </summary>
            <param name="min">The inclusive lower bound of the random number returned.</param>
            <param name="max">The exclusive upper bound of the random number returned.</param>
            <returns>A random number.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextInt(System.UInt32,System.UInt32)">
            <summary>
            Returns a random integer between min and max.
            </summary>
            <param name="min">The inclusive lower bound of the random number returned.</param>
            <param name="max">The exclusive upper bound of the random number returned.</param>
            <returns>A random number.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextUInt(System.UInt32,System.UInt32)">
            <summary>
            Returns a random integer between min and max.
            </summary>
            <param name="min">The inclusive lower bound of the random number returned.</param>
            <param name="max">The exclusive upper bound of the random number returned.</param>
            <returns>A random number.</returns>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.Rand.NextDouble">
            <summary>
            Returns a random double between 0 and 1.
            </summary>
            <returns>A random double between 0 and 1.</returns>
        </member>
        <member name="T:MUnique.OpenMU.GameLogic.SkillList">
            <summary>
            The implementation of the skill list, which automatically adds the passive skill power ups to the player.
            </summary>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.SkillList.#ctor(MUnique.OpenMU.GameLogic.Player)">
            <summary>
            Initializes a new instance of the <see cref="T:MUnique.OpenMU.GameLogic.SkillList"/> class.
            </summary>
            <param name="player">The player.</param>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.SkillList.Skills">
            <inheritdoc/>
        </member>
        <member name="P:MUnique.OpenMU.GameLogic.SkillList.SkillCount">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.SkillList.GetSkill(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.SkillList.AddLearnedSkill(MUnique.OpenMU.DataModel.Configuration.Skill)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.SkillList.RemoveItemSkill(System.UInt16)">
            <inheritdoc/>
        </member>
        <member name="M:MUnique.OpenMU.GameLogic.SkillList.ContainsSkill(System.UInt16)">
            <inheritdoc/>
        </member>
    </members>
</doc>
